{"version":3,"sources":["webpack:///./src/components/intro.js","webpack:///./src/components/list.js","webpack:///./src/hooks/post-data.js","webpack:///./src/output/posts-output.js","webpack:///./src/components/stats.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["Intro","className","css","to","List","children","PostData","useStaticQuery","allMdx","nodes","map","post","title","frontmatter","date","description","path","posts","key","Stats","Index","klass","SEO","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","rel","sizes","href","defaultProps"],"mappings":"0cAgDeA,EA5CD,kBACZ,uBACEC,UAAU,GACVC,IAAG,GAFL,kBA2BiB,oBAAMD,UAAU,OAAhB,KA3BjB,sCA4BU,oBAAMA,UAAU,OAAhB,KA5BV,8DA8BE,oBAAMA,UAAU,OAAhB,KA9BF,eA+Be,IACb,wBACE,YAAC,IAAD,CAAME,GAAG,aAAT,SACM,IAlCV,iCAmCiC,IAC/B,YAAC,IAAD,CAAMA,GAAG,aACP,qCACM,IAtCV,4BAuC2B,oBAAMF,UAAU,OAAhB,S,oNCfdG,EA1BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,mBACEH,IAAG,GAoBFG,ICCUC,EAxBE,WAgBf,OAfaC,YAAe,aAehBC,OAAOC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACpCC,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,YAAaJ,EAAKE,YAAYE,YAC9BC,KAAML,EAAKE,YAAYG,UCjBZ,aACb,IAAMC,EAAQX,IAEd,OACE,YAAC,EAAD,KACE,0CACA,sBACGW,EAAMP,KAAI,SAAAC,GAAI,OACb,kBAAIO,IAAKP,EAAKK,MACZ,YAAC,IAAD,CAAMb,GAAIQ,EAAKK,MAAOL,EAAKC,c,0HCIxBO,EAdD,kBACZ,mBACEjB,IAAG,GAQH,YAAC,EAAD,Q,wBCIWkB,UAVD,kBACZ,YAAC,IAAD,CAAQC,MAAM,QACZ,YAAC,IAAD,CAAKT,MAAM,SACX,YAAC,EAAD,MACA,YAAC,IAAD,MACA,YAAC,IAAD,MACA,YAAC,EAAD,S,kCCdJ,2DAYA,SAASU,EAAT,GAAkD,IAAnCP,EAAkC,EAAlCA,YAAaQ,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMZ,EAAS,EAATA,MAC9Ba,EAASlB,YAAe,YAAxBkB,KAcFC,EAAkBX,GAAeU,EAAKE,aAAaZ,YAEzD,OACE,YAAC,IAAD,CACEa,eAAgB,CACdL,QAEFX,MAAOA,EACPiB,cAAa,QAAUJ,EAAKE,aAAaf,MACzCY,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,IAET,oBAAMW,IAAI,mBAAmBC,MAAM,QAAQC,KAAK,0BAChD,oBACEF,IAAI,mBACJC,MAAM,UACNC,KAAK,kCAMbf,EAAIgB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNT,YAAY,IAUCO","file":"component---src-pages-index-js-794547e89a869b3b01ab.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\n\nconst Intro = () => (\n  <section\n    className=\"\"\n    css={css`\n      padding: 20px 0;\n      font-size: 30px;\n      font-family: \"Acme\", sans-serif;\n      margin-bottom: 50px;\n      line-height: 1.7;\n\n      span:not(.dot) {\n        background: #3385ff;\n        display: inline-block;\n        padding: 0 10px;\n        font-size: 28px;\n        color: #fff;\n        a {\n          color: #fff;\n        }\n      }\n\n      .dot {\n        color: #3385ff;\n        display: inline-block;\n        margin-right: 10px;\n      }\n    `}\n  >\n    My name is Josh<span className=\"dot\">.</span>I am a Full Stack Software\n    Engineer<span className=\"dot\">.</span>\n    Here I write about development and my current tech projects\n    <span className=\"dot\">.</span>\n    Check out my{\" \"}\n    <span>\n      <Link to=\"/thoughts\">Blog</Link>\n    </span>{\" \"}\n    to see what I am writing or my{\" \"}\n    <Link to=\"/projects\">\n      <span>Projects</span>\n    </Link>{\" \"}\n    to see what I am building<span className=\"dot\">...</span>\n  </section>\n);\n\nexport default Intro;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\n\nconst List = ({ children }) => (\n  <div\n    css={css`\n      margin-bottom: 50px;\n      &.last {\n        margin-bottom: 0;\n      }\n      header {\n        font-family: \"Acme\", sans-serif;\n        color: #3385ff;\n        padding: 3px;\n        &:before {\n          content: \"{ \";\n          color: #b3b3b3;\n        }\n        &:after {\n          content: \" }\";\n          color: #b3b3b3;\n        }\n      }\n    `}\n  >\n    {children}\n  </div>\n);\n\nexport default List;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst PostData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMdx(sort: { order: DESC, fields: frontmatter___date }, limit: 3) {\n        nodes {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            path\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes.map(post => ({\n    title: post.frontmatter.title,\n    date: post.frontmatter.date,\n    description: post.frontmatter.description,\n    path: post.frontmatter.path,\n  }));\n};\n\nexport default PostData;\n","import React from \"react\";\nimport List from \"../components/list\";\nimport PostData from \"../hooks/post-data\";\nimport { Link } from \"gatsby\";\n\nexport default () => {\n  const posts = PostData();\n\n  return (\n    <List>\n      <header>Latest Posts</header>\n      <ul>\n        {posts.map(post => (\n          <li key={post.path}>\n            <Link to={post.path}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </List>\n  );\n};\n","import React from \"react\";\nimport PostsOutput from \"../output/posts-output\";\nimport { css } from \"@emotion/core\";\n\nconst Stats = () => (\n  <div\n    css={css`\n      @media (min-width: 600px) {\n        display: flex;\n        flex-direction: wrap;\n        justify-content: space-between;\n      }\n    `}\n  >\n    <PostsOutput />\n  </div>\n);\n\nexport default Stats;\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Intro from \"../components/intro\";\nimport Stats from \"../components/stats\";\nimport Glance from \"../snippets/glance\";\nimport Tags from \"../snippets/tags\";\n\nconst Index = () => (\n  <Layout klass=\"home\">\n    <SEO title=\"Home\" />\n    <Intro />\n    <Glance />\n    <Tags />\n    <Stats />\n  </Layout>\n);\n\nexport default Index;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/apple/site_apple.png\" />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"114x114\"\n        href=\"/apple/site_apple_retina.png\"\n      />\n    </Helmet>\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}