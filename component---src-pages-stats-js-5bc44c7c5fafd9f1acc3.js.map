{"version":3,"sources":["webpack:///./src/components/archived-repos.js","webpack:///./src/components/feature-complete-repos.js","webpack:///./src/pages/stats.js"],"names":["getTheData","useState","repos","setRecentlyUpdatedRepos","results","setResults","a","getData","REPO_URL","data","tagsUrl","tags","archivedRepos","then","ar","archivedTags","useEffect","getRepoList","getStuff","getFeatureCompleteList"],"mappings":"8NAIMA,EAAa,WAAO,IAAD,EACkBC,mBAAS,WAA3CC,EADgB,KACTC,EADS,OAEOF,oBAAS,GAAhCG,EAFgB,KAEPC,EAFO,iDAIvB,8BAAAC,EAAA,sEACqBC,YAAQC,KAD7B,OACQC,EADR,OAEMC,EAAUC,YAAKF,GACnBG,YAAcF,GAASG,MAAK,SAAAC,GAC1B,IAAMV,EAAUW,YAAaD,GAC7BX,EAAwBC,GACxBC,GAAW,MANf,4CAJuB,sBAkBvB,OAJAW,qBAAU,YAda,mCAerBC,KACC,IAEI,CAAEf,QAAOE,YAGH,aAAO,IAAD,EACQJ,IAAnBE,EADW,EACXA,MAAOE,EADI,EACJA,QACf,OACE,YAAC,IAAD,CAAaF,MAAOA,EAAOE,QAASA,KCnBlCc,EAAW,WAAO,IAAD,EACoBjB,mBAAS,WAA3CC,EADc,KACPC,EADO,OAESF,oBAAS,GAAhCG,EAFc,KAELC,EAFK,iDAIrB,sBAAAC,EAAA,sEACqBC,YAAQC,KAD7B,cAGEL,EAXQ,IAYRE,GAAW,GAJb,4CAJqB,sBAerB,OAJAW,qBAAU,YAXW,mCAYnBG,KACC,IAEI,CAAEjB,QAAOE,YAGH,aAAO,IAAD,EACQc,IAAnBhB,EADW,EACXA,MAAOE,EADI,EACJA,QACf,OAAO,YAAC,IAAD,CAAaF,MAAOA,EAAOE,QAASA,K,YCtB9B,qBACb,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,oDACA,YAAC,IAAD,MAEA,4CACA,YAAC,EAAD,MAEA,oDACA,YAAC,EAAD","file":"component---src-pages-stats-js-5bc44c7c5fafd9f1acc3.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { REPO_URL, tags, archivedRepos, getData, archivedTags } from \"../utilities/api_requests\"\nimport RepoResults from \"../components/repo-results\";\n\nconst getTheData = () => {\n  const [repos, setRecentlyUpdatedRepos] = useState(\"no data\");\n  const [results, setResults] = useState(false);\n\n  async function getRepoList() {\n    const data = await getData(REPO_URL);\n    let tagsUrl = tags(data);\n    archivedRepos(tagsUrl).then(ar => {\n      const results = archivedTags(ar);\n      setRecentlyUpdatedRepos(results);\n      setResults(true);\n    });\n  }\n\n  useEffect(() => {\n    getRepoList();\n  }, []);\n\n  return { repos, results };\n};\n\nexport default () => {\n  const { repos, results } = getTheData();\n  return (\n    <RepoResults repos={repos} results={results} />\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport RepoResults from \"../components/repo-results\";\nimport { REPO_URL, getData } from \"../utilities/api_requests\"\n\nconst top = function(data) {\n  let all = [];\n  return all;\n};\n\nconst getStuff = () => {\n  const [repos, setRecentlyUpdatedRepos] = useState(\"no data\");\n  const [results, setResults] = useState(false);\n\n  async function getFeatureCompleteList() {\n    const data = await getData(REPO_URL);\n    let t = top(data);\n    setRecentlyUpdatedRepos(t);\n    setResults(true);\n  }\n\n  useEffect(() => {\n    getFeatureCompleteList();\n  }, []);\n\n  return { repos, results };\n};\n\nexport default () => {\n  const { repos, results } = getStuff();\n  return <RepoResults repos={repos} results={results} />;\n};\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport RecentlyUpdatedRepos from \"../components/recently-updated-repos\";\nimport ArchivedRepos from \"../components/archived-repos\";\nimport FeatureComplete from \"../components/feature-complete-repos\";\nimport List from \"../components/list\";\n\nexport default () => {\n  return (\n    <Layout>\n      <List>\n        <header>Recently Updated Repos</header>\n        <RecentlyUpdatedRepos />\n\n        <header>Archived Repos</header>\n        <ArchivedRepos />\n\n        <header>Feature Complete Repos</header>\n        <FeatureComplete />\n      </List>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}