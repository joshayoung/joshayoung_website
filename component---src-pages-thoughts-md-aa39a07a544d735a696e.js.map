{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs","webpack:///./src/hooks/thought-data.js","webpack:///./src/items/thought.js","webpack:///./src/output/thoughts-output.js","webpack:///./src/pages/thoughts.md","webpack:///./src/components/layout-markdown.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","ThoughtData","useStaticQuery","allMdx","nodes","map","post","title","frontmatter","date","description","path","Thought","css","to","thoughts","thought","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent","LayoutMarkdown","children","klass"],"mappings":"8FAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E,sPCcMM,EAxBK,WAgBlB,OAfaC,YAAe,cAehBC,OAAOC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACpCC,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,YAAaJ,EAAKE,YAAYE,YAC9BC,KAAML,EAAKE,YAAYG,U,YClB3B,I,4CA2BeC,EAzBC,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAH,OACd,mBACEO,IAAKA,YAAF,2DAJM,UAIN,OASH,sBACE,YAAC,IAAD,CAAMC,GAAIR,EAAKK,MAAOL,EAAKC,QAE7B,qBAAID,EAAKI,aACT,mBACEG,IAAG,GAIFP,EAAKG,QCtBG,aACb,IAAMM,EAAWd,IAEjB,OACE,8BACGc,EAASV,KAAI,SAAAW,GAAO,OACnB,YAAC,EAAD,CAASvB,IAAKuB,EAAQL,KAAML,KAAMU,SCD7BC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kCACA,wRACA,YAAC,EAAD,CAAgBA,QAAQ,oBAK5BH,EAAWI,gBAAiB,G,kCC5B5B,iDAaeC,IAVQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrB,8BACE,YAAC,IAAD,CAAQA,SAAUA,EAAUC,MAAM","file":"component---src-pages-thoughts-md-aa39a07a544d735a696e.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst ThoughtData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n        nodes {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            path\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes.map(post => ({\n    title: post.frontmatter.title,\n    date: post.frontmatter.date,\n    description: post.frontmatter.description,\n    path: post.frontmatter.path,\n  }));\n};\n\nexport default ThoughtData;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { css } from \"@emotion/core\";\n\nconst blue = \"#3385ff\";\n\nconst Thought = ({ post }) => (\n  <div\n    css={css`\n      border-bottom: 3px solid #ccc;\n      margin-bottom: 40px;\n\n      a {\n        color: ${blue};\n      }\n    `}\n  >\n    <h3>\n      <Link to={post.path}>{post.title}</Link>\n    </h3>\n    <p>{post.description}</p>\n    <div\n      css={css`\n        font-size: 12px;\n      `}\n    >\n      {post.date}\n    </div>\n  </div>\n);\n\nexport default Thought;\n","import React from \"react\";\nimport ThoughtData from \"../hooks/thought-data\";\nimport Thought from \"../items/thought\";\n\nexport default () => {\n  const thoughts = ThoughtData();\n\n  return (\n    <>\n      {thoughts.map(thought => (\n        <Thought key={thought.path} post={thought} />\n      ))}\n    </>\n  );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/josh.young/Code/hub/joshayoung_website/src/components/layout-markdown.js\";\nimport ThoughtsOutput from \"../output/thoughts-output\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Thoughts`}</h1>\n    <p>{`Here I document concise posts about web development or programming that I am learning or have recently discovered. Many times these entries are very short, as I am not a prolific blogger. However, hopefully something I list here will be helpful to others.`}</p>\n    <ThoughtsOutput mdxType=\"ThoughtsOutput\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\n\nconst LayoutMarkdown = ({ children }) => (\n  <>\n    <Layout children={children} klass=\"markdown\" />\n  </>\n);\n\nLayoutMarkdown.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nexport default LayoutMarkdown;\n"],"sourceRoot":""}