{"version":3,"sources":["webpack:///./src/hooks/podcast-data.js","webpack:///./src/items/podcast.js","webpack:///./src/output/podcast-output.js","webpack:///./src/hooks/podcast-recommend-data.js","webpack:///./src/output/podcast-recommended-output.js","webpack:///./src/items/book.js","webpack:///./src/hooks/book-data.js","webpack:///./src/output/books-output.js","webpack:///./src/items/book-recommended.js","webpack:///./src/output/books-recommended-output.js","webpack:///./src/pages/me.md","webpack:///./src/components/layout-markdown.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["PodcastData","useStaticQuery","allPodcastsJson","nodes","map","data","id","title","url","display","podcast","href","podcasts","key","PodcastRecommendedData","allPodcastsRecommendedJson","Book","post","book","i","short_title","truncated_authors","author","BookData","allBooksJson","hide_list","hide_from_recommended","books","BookRecommended","bookTitle","this","theBook","recommend","message","props","hide","render","Component","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","LayoutMarkdown","children","klass","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-pages-me-md-47ed0902886555d74090.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\n\nconst PodcastData = () => {\n  const data = useStaticQuery(graphql`\n  {\n    allPodcastsJson {\n      nodes {\n        id\n        title\n        url\n        display\n      }\n    }\n  }\n  `);\n\n  return data.allPodcastsJson.nodes.map(data => ({\n    id: data.id,\n    title: data.title,\n    url: data.url,\n    display: data.display\n  }));\n};\n\nexport default PodcastData;","import React from \"react\";\n\nexport default ({ podcast }) => {\n  const data = function(podcast) {\n    if (podcast.display === true) {\n      return (\n        <li><a href={podcast.url}>{podcast.title}</a></li>\n      )\n    }\n  };\n\n  return (\n    <ul>\n      {data(podcast)}\n    </ul>\n  );\n};\n","import React from \"react\";\nimport PodcastData from \"../hooks/podcast-data\";\nimport Podcast from \"../items/podcast\";\n\nexport default () => {\n  const podcasts = PodcastData();\n\n  return (\n    <ul>\n      {podcasts.map(podcast => (\n        <Podcast key={podcast.id} podcast={podcast} />\n      ))}\n    </ul>\n  );\n};\n","import { graphql, useStaticQuery } from 'gatsby';\n\nconst PodcastRecommendedData = () => {\n  const data = useStaticQuery(graphql`\n  {\n    allPodcastsRecommendedJson {\n      nodes {\n        id\n        title\n        url\n        display\n      }\n    }\n  }\n  `);\n\n  return data.allPodcastsRecommendedJson.nodes.map(data => ({\n    id: data.id,\n    title: data.title,\n    url: data.url,\n    display: data.display\n  }));\n};\n\nexport default PodcastRecommendedData;","import React from \"react\";\nimport PodcastRecommendedData from \"../hooks/podcast-recommend-data\";\nimport Podcast from \"../items/podcast\";\n\nexport default () => {\n  const podcasts = PodcastRecommendedData();\n\n  return (\n    <ul>\n      {podcasts.map(podcast => (\n        <Podcast key={podcast.id} podcast={podcast} />\n      ))}\n    </ul>\n  );\n};","import React from \"react\";\n\nconst Book = ({ title, post }) => {\n  const fun = function(data) {\n    if (data.truncated_authors) {\n      return \" by \" + data.truncated_authors;\n    } else if (data.author !== \"\") {\n      return \" by \" + data.author;\n    }\n  };\n  return (\n    <>\n      <h5>{title}</h5>\n      <ul>\n        {post.map((book, i) => (\n          <li key={i}>\n            {book.display ? (\n              <>\n                {book.short_title ? <>{book.short_title}</> : <>{book.title}</>}\n                {fun(book)}\n              </>\n            ) : (\n              \"\"\n            )}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Book;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nconst BookData = () => {\n  const data = useStaticQuery(graphql`\n  {\n    allBooksJson {\n      nodes {\n        hide_from_recommended\n        id\n        title\n        data {\n          author\n          title\n          url\n          display\n          short_title\n          recommend\n          truncated_authors\n        }\n      }\n    }\n  }\n  `);\n\n  return data.allBooksJson.nodes.map(data => ({\n    hide_list: data.hide_from_recommended,\n    id: data.id,\n    title: data.title,\n    data: data.data\n  }));\n};\n\nexport default BookData;","import React from \"react\";\nimport Book from \"../items/book\";\nimport BookData from \"../hooks/book-data\";\n\nexport default () => {\n  const books = BookData();\n\n  return (\n    <>\n      {books.map(book => (\n        <Book key={book.id} title={book.title} post={book.data} />\n      ))}\n    </>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass BookRecommended extends Component {\n  author(data) {\n    if (data.truncated_authors) {\n      return \" by \" + data.truncated_authors;\n    } else if (data.author !== \"\") {\n      return \" by \" + data.author;\n    }\n  }\n\n  bookTitle(book) {\n    if (book.short_title) {\n      return (\n        <>\n          {book.short_title}\n          {this.author(book)}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {book.title}\n          {this.author(book)}\n        </>\n      );\n    }\n  }\n\n  theBook(book, i) {\n    if (book.display && book.recommend === true) {\n      return <li key={i}>{this.bookTitle(book)}</li>;\n    }\n  }\n\n  message() {\n    if (this.props.hide !== true) {\n      return (\n        <>\n          <h5>{this.props.title}</h5>\n          <ul>{this.props.post.map((book, i) => this.theBook(book, i))}</ul>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.message()}</>;\n  }\n}\n\nexport default BookRecommended;\n","import React from \"react\";\nimport BookData from \"../hooks/book-data\";\nimport BookRecommended from \"../items/book-recommended\";\n\nexport default () => {\n  const books = BookData();\n\n  return (\n    <>\n      {books.map(book => (\n        <BookRecommended key={book.id} id={book.id} title={book.title} hide={book.hide_list} post={book.data} />\n      ))}\n    </>\n  );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/josh.young/Code/hub/joshayoung_website/src/components/layout-markdown.js\";\nimport PodcastOutput from '../output/podcast-output';\nimport PodcastRecommendOutput from '../output/podcast-recommended-output';\nimport BooksOutput from '../output/books-output';\nimport BooksRecommendedOutput from '../output/books-recommended-output';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`About Me`}</h1>\n    <p>{`My name is Josh Young. I am a web developer living and working in Franklin, Tennessee. I enjoy all things tech related. I am not a huge blogger, but I enjoy writing small posts about what I am currently working with or technologies that I am using. Maybe something I say here will help someone in their journey, or at the very least provide a central place for me to document what I have learned when working through new projects.`}</p>\n    <h3>{`My Job`}</h3>\n    <p>{`For my day job, I maintain web applications, websites, and other apps for my employer,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.daveramsey.com\"\n      }}>{`Ramsey Solutions`}</a>{`. In a typical day, I work primarily with Rails, Ruby, CSS, SASS, JavaScript and their accompanying technologies such as build tools, testing frameworks, and the like.`}</p>\n    <p>{`In the past, I have had the opportunity to work with many technologies including, but not limited to: PHP, Laravel, Objective-C, C#, ASP.NET and Python. On the `}<a parentName=\"p\" {...{\n        \"href\": \"/resume\"\n      }}>{`resume`}</a>{` portion of this site, I have listed some of my job duties in more detail.`}</p>\n    <h3><a id='hobbies'></a>{` Hobbies`}</h3>\n    <p>{`Many of my hobbies relate to technology and development. I enjoy coding and designing web applications and web sites. When it comes to web development, I enjoy the whole stack from front end to back end. Therefore, I spend a significant amount of my free time keeping up with and learning the latest languages and frameworks. When possible, I try to implement this additional knowledge into the software stack that I use at work.`}</p>\n    <p>{`I also spend some of my free time maintaining my home network, firewall, file server, git server, among other open-source applications. I enjoy Linux and FreeBSD so I spend time configuring these systems in my free time as well. As evident by some of my certifications and training, I also dabble in computer security. A good working knowledge of computer security and specifically web application security is very helpful as a web developer. If I am not working on servers or code, I spend my time playing my harmonica, biking, reading, or researching nutrition.`}</p>\n    <h3><a id='podcasts'></a>{`Recommended Podcasts`}</h3>\n    <p>{`Below I have listed the tech podcasts that I currently listen to or have listened to in the past. Podcasts are a great way to keep up with the latest changes in development. Hopefully this list will introduce a good podcast to someone who enjoys learning and keeping up with the latest changes in tech.`}</p>\n    <PodcastOutput mdxType=\"PodcastOutput\" />\n    <h3><a id='podcast_episodes'></a>{`Great Podcast Episodes`}</h3>\n    <PodcastRecommendOutput mdxType=\"PodcastRecommendOutput\" />\n    <h3><a id='books'></a>{`Books I've Read`}</h3>\n    <p>{`Frequently, I try to delve deeper into specific aspects of tech that I want to learn more about. I find that buying a book about a particular technology can be a beneficial deep-dive experience. Below I have listed some of the books I have read over the years, which have contributed to where I am today (listed in alphabetical order and categorized below).`}</p>\n    <BooksOutput mdxType=\"BooksOutput\" />\n    <h3><a id='books_i_recommend'></a>{`Books I Recommend`}</h3>\n    <p>{`Of the software engineering, networking, security, and design books that I listed above, these are some of the books that I highly recommend.`}</p>\n    <BooksRecommendedOutput mdxType=\"BooksRecommendedOutput\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\n\nconst LayoutMarkdown = ({ children }) => (\n  <>\n    <Layout children={children} klass='markdown' />\n  </>\n)\n\nLayoutMarkdown.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nexport default LayoutMarkdown;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}