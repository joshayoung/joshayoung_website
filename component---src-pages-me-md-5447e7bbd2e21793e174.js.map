{"version":3,"file":"component---src-pages-me-md-5447e7bbd2e21793e174.js","mappings":"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","sources":["webpack:///./src/hooks/podcast-data.js","webpack:///./src/items/podcast.js","webpack:///./src/output/podcast-output.js","webpack:///./src/hooks/podcast-recommend-data.js","webpack:///./src/output/podcast-recommended-output.js","webpack:///./src/items/book.js","webpack:///./src/hooks/book-data.js","webpack:///./src/output/books-output.js","webpack:///./src/items/book-recommended.js","webpack:///./src/output/books-recommended-output.js","webpack:///./src/pages/me.md","webpack:///./src/components/layout-markdown.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\n\nconst PodcastData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allPodcastsJson {\n        nodes {\n          id\n          title\n          url\n          display\n        }\n      }\n    }\n  `);\n\n  return data.allPodcastsJson.nodes.map(data => ({\n    id: data.id,\n    title: data.title,\n    url: data.url,\n    display: data.display,\n  }));\n};\n\nexport default PodcastData;\n","import React from \"react\";\n\nexport default ({ podcast }) => {\n  const data = function(podcast) {\n    if (podcast.display === true) {\n      return (\n        <li>\n          <a href={podcast.url}>{podcast.title}</a>\n        </li>\n      );\n    }\n  };\n\n  return <ul>{data(podcast)}</ul>;\n};\n","import React from \"react\";\nimport PodcastData from \"../hooks/podcast-data\";\nimport Podcast from \"../items/podcast\";\n\nexport default () => {\n  const podcasts = PodcastData();\n\n  return (\n    <ul>\n      {podcasts.map(podcast => (\n        <Podcast key={podcast.id} podcast={podcast} />\n      ))}\n    </ul>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst PodcastRecommendedData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allPodcastsRecommendedJson {\n        nodes {\n          id\n          title\n          url\n          display\n        }\n      }\n    }\n  `);\n\n  return data.allPodcastsRecommendedJson.nodes.map(data => ({\n    id: data.id,\n    title: data.title,\n    url: data.url,\n    display: data.display,\n  }));\n};\n\nexport default PodcastRecommendedData;\n","import React from \"react\";\nimport PodcastRecommendedData from \"../hooks/podcast-recommend-data\";\nimport Podcast from \"../items/podcast\";\n\nexport default () => {\n  const podcasts = PodcastRecommendedData();\n\n  return (\n    <ul>\n      {podcasts.map(podcast => (\n        <Podcast key={podcast.id} podcast={podcast} />\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\n\nconst Book = ({ title, post }) => {\n  const fun = function(book) {\n    if (book.truncated_authors) {\n      return \" by \" + book.truncated_authors;\n    } else if (book.author !== \"\") {\n      return \" by \" + book.author;\n    }\n  };\n\n  const bookTitle = function(book) {\n    let title = '';\n    if (book.short_title) {\n      title = book.short_title\n    } else {\n      title = book.title\n    }\n    return title;\n  }\n\n  const theBook = function(book) {\n    if (!book.display) {\n      return null;\n    }\n    return (\n      <li> {bookTitle(book)} {fun(book)} </li>\n    )\n  }\n\n  return (\n    <>\n      <h5>{title}</h5>\n      <ul>\n        {post.map((book, i) => (\n          <div key={i}>\n            {theBook(book)}\n          </div>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Book;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst BookData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allBooksJson {\n        nodes {\n          hide_from_recommended\n          id\n          title\n          data {\n            author\n            title\n            url\n            display\n            short_title\n            recommend\n            truncated_authors\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allBooksJson.nodes.map(data => ({\n    hide_list: data.hide_from_recommended,\n    id: data.id,\n    title: data.title,\n    data: data.data,\n  }));\n};\n\nexport default BookData;\n","import React from \"react\";\nimport Book from \"../items/book\";\nimport BookData from \"../hooks/book-data\";\n\nexport default () => {\n  const books = BookData();\n\n  return (\n    <>\n      {books.map(book => (\n        <Book key={book.id} title={book.title} post={book.data} />\n      ))}\n    </>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass BookRecommended extends Component {\n  author(data) {\n    if (data.truncated_authors) {\n      return \" by \" + data.truncated_authors;\n    } else if (data.author !== \"\") {\n      return \" by \" + data.author;\n    }\n  }\n\n  bookTitle(book) {\n    if (book.short_title) {\n      return (\n        <>\n          {book.short_title}\n          {this.author(book)}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {book.title}\n          {this.author(book)}\n        </>\n      );\n    }\n  }\n\n  theBook(book, i) {\n    if (book.display && book.recommend === true) {\n      return <li key={i}>{this.bookTitle(book)}</li>;\n    }\n  }\n\n  message() {\n    if (this.props.hide !== true) {\n      return (\n        <>\n          <h5>{this.props.title}</h5>\n          <ul>{this.props.post.map((book, i) => this.theBook(book, i))}</ul>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.message()}</>;\n  }\n}\n\nexport default BookRecommended;\n","import React from \"react\";\nimport BookData from \"../hooks/book-data\";\nimport BookRecommended from \"../items/book-recommended\";\n\nexport default () => {\n  const books = BookData();\n\n  return (\n    <>\n      {books.map(book => (\n        <BookRecommended\n          key={book.id}\n          id={book.id}\n          title={book.title}\n          hide={book.hide_list}\n          post={book.data}\n        />\n      ))}\n    </>\n  );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/josh.young/Code/hub/joshayoung_website/src/components/layout-markdown.js\";\nimport PodcastOutput from '../output/podcast-output';\nimport PodcastRecommendOutput from '../output/podcast-recommended-output';\nimport BooksOutput from '../output/books-output';\nimport BooksRecommendedOutput from '../output/books-recommended-output';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`About Me`}</h1>\n    <p>{`My name is Josh Young. I am a web developer living and working in Nashville, Tennessee. I enjoy all things tech related. I am not a huge blogger, but I enjoy writing small posts about what I am currently working with or technologies that I am using. Maybe something I say here will help someone in their journey, or at the very least provide a central place for me to document what I have learned when working through new projects.`}</p>\n    <h3>{`My Job`}</h3>\n    <p>{`For my day job, I maintain web applications, websites, and other apps for my employer,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.daveramsey.com\"\n      }}>{`Ramsey Solutions`}</a>{`. In a typical day, I work primarily with Rails, Ruby, CSS, SASS, JavaScript and their accompanying technologies such as build tools, testing frameworks, and the like.`}</p>\n    <p>{`In the past, I have had the opportunity to work with many technologies including, but not limited to: PHP, Laravel, Objective-C, C#, ASP.NET and Python. On the `}<a parentName=\"p\" {...{\n        \"href\": \"/resume\"\n      }}>{`resume`}</a>{` portion of this site, I have listed some of my job duties in more detail.`}</p>\n    <h3><a id='hobbies'></a>{` Hobbies`}</h3>\n    <p>{`Many of my hobbies relate to technology and development. I enjoy coding and designing web applications and web sites. When it comes to web development, I enjoy the whole stack from front end to back end. Therefore, I spend a significant amount of my free time keeping up with and learning the latest languages and frameworks. When possible, I try to implement this additional knowledge into the software stack that I use at work.`}</p>\n    <p>{`I also spend some of my free time maintaining my home network, firewall, file server, git server, among other open-source applications. I enjoy Linux and FreeBSD so I spend time configuring these systems in my free time as well. As evident by some of my certifications and training, I also dabble in computer security. A good working knowledge of computer security and specifically web application security is very helpful as a web developer. If I am not working on servers or code, I spend my time playing my harmonica, biking, reading, or researching nutrition.`}</p>\n    <h3><a id='podcasts'></a>{`Recommended Podcasts`}</h3>\n    <p>{`Below I have listed the tech podcasts that I currently listen to or have listened to in the past. Podcasts are a great way to keep up with the latest changes in development. Hopefully this list will introduce a good podcast to someone who enjoys learning and keeping up with the latest changes in tech.`}</p>\n    <PodcastOutput mdxType=\"PodcastOutput\" />\n    <h3><a id='podcast_episodes'></a>{`Great Podcast Episodes`}</h3>\n    <PodcastRecommendOutput mdxType=\"PodcastRecommendOutput\" />\n    <h3><a id='books'></a>{`Books I've Read`}</h3>\n    <p>{`Frequently, I try to delve deeper into specific aspects of tech that I want to learn more about. I find that buying a book about a particular technology can be a beneficial deep-dive experience. Below I have listed some of the books I have read over the years, which have contributed to where I am today (listed in alphabetical order and categorized below).`}</p>\n    <BooksOutput mdxType=\"BooksOutput\" />\n    <h3><a id='books_i_recommend'></a>{`Books I Recommend`}</h3>\n    <p>{`Of the software engineering, networking, security, and design books that I listed above, these are some of the books that I highly recommend.`}</p>\n    <BooksRecommendedOutput mdxType=\"BooksRecommendedOutput\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\n\nconst LayoutMarkdown = ({ children }) => (\n  <>\n    <Layout children={children} klass=\"markdown\" />\n  </>\n);\n\nLayoutMarkdown.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nexport default LayoutMarkdown;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["useStaticQuery","allPodcastsJson","nodes","map","data","id","title","url","display","podcast","href","podcasts","PodcastData","key","allPodcastsRecommendedJson","PodcastRecommendedData","post","book","i","short_title","bookTitle","truncated_authors","author","fun","theBook","allBooksJson","hide_list","hide_from_recommended","books","BookData","BookRecommended","this","recommend","message","props","hide","render","Component","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","children","klass","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}