{"componentChunkName":"component---src-templates-post-js","path":"/start-with-docker","result":{"data":{"markdownRemark":{"html":"<p>Before I embark on the road to explain docker, I want to define a few concepts. In the docker world, we have two structures: <em>images</em> and <em>containers</em>. At the base level, you can download (pull) an image from the <a href=\"https://hub.docker.com\">hub.docker.com</a>, and use it to build a container.</p>\n<h4>Pull a Image:</h4>\n<ul>\n<li><code>docker pull postgres</code></li>\n<li>You will see something like this on your command line:</li>\n</ul>\n<pre><code class=\"language-bash\">Using default tag: latest\nlatest: Pulling from library/postgres\nDigest: sha256:ce0f6c28b5869ff166714d5ff9702e38b00f81ad348c6\n</code></pre>\n<ul>\n<li>This will provide an image on your local machine for use with building a container.</li>\n</ul>\n<h4>Build a Container:</h4>\n<ul>\n<li>From here we can create a container with the <code>docker run</code> command:</li>\n<li>\n<p><code>docker run --name postgres_cont -e POSTGRES_PASSWORD=password -d postgres</code></p>\n<ul>\n<li><code>--name</code> will name my container.</li>\n<li><code>-e</code> will pass environmental values to my container.</li>\n<li><code>-d</code> tells the run command which image to use.</li>\n</ul>\n</li>\n<li>Now, I have a container named 'postgres_cont' on my local machine.</li>\n<li>\n<p>I can spin this container up by running the 'start' command:</p>\n<ul>\n<li><code>docker container start postgres_cont</code></li>\n</ul>\n</li>\n</ul>\n<h4>Connect to a Running Container:</h4>\n<ul>\n<li>I can connect to a running container by running the <code>exec</code> command:</li>\n<li>\n<p><code>docker exec -it postgres_cont bash</code></p>\n<ul>\n<li><code>-it</code> says to create an interactive session.</li>\n<li><code>postgres_cont</code> is my container name.</li>\n<li><code>bash</code> is the process I want to use when I attach to my container.</li>\n<li>This will give me an interactive terminal session within the container where I can run postgres commands.</li>\n</ul>\n</li>\n</ul>\n<h4>Connect to the Container from the Host:</h4>\n<p>If I want to connect to my container from my host machine, I will need to expose the container's port to my host.</p>\n<ul>\n<li><code>docker run --name postgres_cont -p 5432:5432 -e POSTGRES_PASSWORD=password -d postgres</code></li>\n<li>Now instead of having to connect to my running container via the command line, I can use any postgres gui to connect to my database from my host machine on port 5432.</li>\n</ul>","frontmatter":{"date":"June 15, 2020","path":"/start-with-docker","title":"Start with Docker"}}},"pageContext":{}},"staticQueryHashes":["305197398"]}