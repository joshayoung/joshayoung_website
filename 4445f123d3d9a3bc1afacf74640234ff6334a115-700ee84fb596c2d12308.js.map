{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/asyncToGenerator/_index.mjs","webpack:///./src/components/repo-results.js","webpack:///./src/utilities/api_requests.js","webpack:///./src/components/list.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","results","repos","map","val","raw_url","dangerouslySetInnerHTML","__html","url","REPO_URL","top","data","Array","isArray","all","forEach","repo","push","name","html_url","updated","updated_at","language","created_at","split","sort","a","b","Date","slice","getData","process","fetch","headers","Authorization","response","json","tags","allTags","tag","tags_url","tagsUrl","featureCompleteRepos","archived","t","filter","length","archivedRepos","repoName","zipball_url","archivedTags","tg","completedTags","List","children","css","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"6FAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,uEC/BZ,qCAEe,gBAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACxB,OACE,8BACGD,EACC,sBACGC,EAAMC,KAAI,SAAAC,GAAG,OACZ,kBAAIpB,IAAKoB,EAAIC,SAAWD,GACtB,mBAAKE,wBAAyB,CAAEC,OAAQH,EAAII,KAAOJ,UAKzD,sBACE,wC,iWCfJK,EAAW,gDAEXC,EAAM,SAASC,GACnB,IAAKC,MAAMC,QAAQF,GAAS,MAAO,GAEnC,IAAIG,EAAM,GAcV,OAbAH,EAAKI,SAAQ,SAACC,EAAM7B,GAClB2B,EAAIG,KAAK,CACPC,KAAMF,EAAKE,KACXV,IAAK,YAAcQ,EAAKG,SAAW,KAAOH,EAAKE,KAAO,OACtDb,QAASW,EAAKR,IACdY,QAASJ,EAAKK,WACdC,SAAUN,EAAKM,SACfC,WAAYP,EAAKO,WAAWC,MAAM,KAAK,QAG3CV,EAAIW,MAAK,SAASC,EAAGC,GACnB,OAAO,IAAIC,KAAKD,EAAEP,SAAW,IAAIQ,KAAKF,EAAEN,YAEnCN,EAAIe,MAAM,EAAG,IAGhBC,EAAO,uCAAG,WAAMtB,GAAN,eAAAkB,EAAA,4DAEdK,WAFc,SAGSC,MAAMxB,EAAK,CAChCyB,QAAS,CAAEC,cAAe,oBAJd,cAGRC,EAHQ,yBAMPA,EAASC,QANF,2CAAH,sDASPC,EAAO,SAAA1B,GACX,IAAI2B,EAAU,GACd3B,EAAKI,SAAQ,SAAAwB,GACXD,EAAQrB,KAAK,CAAEC,KAAMqB,EAAIrB,KAAMV,IAAK+B,EAAIC,cAE5C,IAAIC,EAAU,GAIZ,OAHFH,EAAQvB,SAAQ,SAAAwB,GACZE,EAAQxB,KAAKa,EAAQS,EAAI/B,SAEpBiC,GAGHC,EAAuB,SAACD,GAC1B,OAAOnD,QAAQwB,IAAI2B,GAASlD,MAAK,SAAAuB,GACjC,IAAI6B,EAAW,GAIf,OAHA7B,EAAIC,SAAQ,SAAA6B,GACZD,EAAS1B,KAAK2B,MAEPD,EAASE,QAAO,SAAAnB,GAAC,OAAiB,IAAbA,EAAEoB,cAI5BC,EAAgB,SAACN,GACnB,OAAOnD,QAAQwB,IAAI2B,GAASlD,MAAK,SAAAuB,GACjC,IAAI6B,EAAW,GAIf,OAHA7B,EAAIC,SAAQ,SAAA6B,GACZD,EAAS1B,KAAK2B,MAEPD,EAASE,QAAO,SAAAnB,GAAC,OAAiB,IAAbA,EAAEoB,cAI5BE,EAAW,SAAA9B,GACf,OAAOA,EAAK+B,YAAYzB,MAAM,KAAK,IAG/B0B,EAAe,SAAAvC,GACnB,IAAIgC,EAAW,GAOf,OANAhC,EAAKI,SAAQ,SAAAoC,GACX,IAAInC,EAAOmC,EAAGN,QAAO,SAAA1D,GAAK,MAAmB,aAAfA,EAAM+B,QAChCF,EAAK8B,OAAS,GAChBH,EAAS1B,KAAK+B,EAAShC,EAAK,QAGzB2B,GAGHS,EAAgB,SAAAzC,GACpB,IAAIgC,EAAW,GAOf,OANAhC,EAAKI,SAAQ,SAAAoC,GACX,IAAInC,EAAOmC,EAAGN,QAAO,SAAA1D,GAAK,MAAmB,qBAAfA,EAAM+B,QAChCF,EAAK8B,OAAS,GAChBH,EAAS1B,KAAK+B,EAAShC,EAAK,QAGzB2B,I,2XC3DMU,IAxBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,mBAAKC,IAAG,GAmBLD,K,qBCvBLE,EAAOC,QAAU,EAAQ,S,qBCOzB,IAAIC,EAAW,SAAUD,GACvB,aAEA,IAAIE,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKzF,EAAKG,GAOxB,OANAyE,OAAOc,eAAeD,EAAKzF,EAAK,CAC9BG,MAAOA,EACPwF,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAIzF,GAEb,IAEEwF,EAAO,GAAI,IACX,MAAOzE,GACPyE,EAAS,SAASC,EAAKzF,EAAKG,GAC1B,OAAOsF,EAAIzF,GAAOG,GAItB,SAAS2F,EAAKC,EAASC,EAAStF,EAAMuF,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAsMZ,SAA0BT,EAASrF,EAAM4F,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQzG,GAC7B,GAhLoB,cAgLhBwG,EACF,MAAM,IAAIE,MAAM,gCAGlB,GAnLoB,cAmLhBF,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMzG,EAKR,OAAO2G,IAMT,IAHAN,EAAQI,OAASA,EACjBJ,EAAQrG,IAAMA,IAED,CACX,IAAI4G,EAAWP,EAAQO,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUP,GACnD,GAAIQ,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBR,EAAQI,OAGVJ,EAAQW,KAAOX,EAAQY,MAAQZ,EAAQrG,SAElC,GAAuB,UAAnBqG,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQrG,IAGhBqG,EAAQa,kBAAkBb,EAAQrG,SAEN,WAAnBqG,EAAQI,QACjBJ,EAAQc,OAAO,SAAUd,EAAQrG,KAGnCwG,EA5NkB,YA8NlB,IAAIY,EAASC,EAASvB,EAASrF,EAAM4F,GACrC,GAAoB,WAAhBe,EAAOE,KAAmB,CAO5B,GAJAd,EAAQH,EAAQjG,KAjOA,YAFK,iBAuOjBgH,EAAOpH,MAAQ+G,EACjB,SAGF,MAAO,CACL7G,MAAOkH,EAAOpH,IACdI,KAAMiG,EAAQjG,MAGS,UAAhBgH,EAAOE,OAChBd,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQrG,IAAMoH,EAAOpH,OA9QPuH,CAAiBzB,EAASrF,EAAM4F,GAE7CF,EAcT,SAASkB,EAAS7G,EAAIgF,EAAKxF,GACzB,IACE,MAAO,CAAEsH,KAAM,SAAUtH,IAAKQ,EAAGgH,KAAKhC,EAAKxF,IAC3C,MAAOc,GACP,MAAO,CAAEwG,KAAM,QAAStH,IAAKc,IAhBjC0D,EAAQqB,KAAOA,EAoBf,IAOIkB,EAAmB,GAMvB,SAASb,KACT,SAASuB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB1C,GAAkB,WAClC,OAAOvE,MAGT,IAAIkH,EAAWjD,OAAOkD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BpD,GAC5BG,EAAO2C,KAAKM,EAAyB7C,KAGvC0C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B9C,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAOuB,GAWtC,SAASM,EAAsBrD,GAC7B,CAAC,OAAQ,QAAS,UAAU9C,SAAQ,SAAS2E,GAC3ClB,EAAOX,EAAW6B,GAAQ,SAASzG,GACjC,OAAOU,KAAK6F,QAAQE,EAAQzG,SAkClC,SAASkI,EAAc/B,EAAWgC,GAgChC,IAAIC,EAgCJ1H,KAAK6F,QA9BL,SAAiBE,EAAQzG,GACvB,SAASqI,IACP,OAAO,IAAIF,GAAY,SAASxI,EAASC,IAnC7C,SAAS0I,EAAO7B,EAAQzG,EAAKL,EAASC,GACpC,IAAIwH,EAASC,EAASlB,EAAUM,GAASN,EAAWnG,GACpD,GAAoB,UAAhBoH,EAAOE,KAEJ,CACL,IAAIiB,EAASnB,EAAOpH,IAChBE,EAAQqI,EAAOrI,MACnB,OAAIA,GACiB,iBAAVA,GACP2E,EAAO2C,KAAKtH,EAAO,WACdiI,EAAYxI,QAAQO,EAAMsI,SAASlI,MAAK,SAASJ,GACtDoI,EAAO,OAAQpI,EAAOP,EAASC,MAC9B,SAASkB,GACVwH,EAAO,QAASxH,EAAKnB,EAASC,MAI3BuI,EAAYxI,QAAQO,GAAOI,MAAK,SAASmI,GAI9CF,EAAOrI,MAAQuI,EACf9I,EAAQ4I,MACP,SAASpI,GAGV,OAAOmI,EAAO,QAASnI,EAAOR,EAASC,MAvBzCA,EAAOwH,EAAOpH,KAiCZsI,CAAO7B,EAAQzG,EAAKL,EAASC,MAIjC,OAAOwI,EAaLA,EAAkBA,EAAgB9H,KAChC+H,EAGAA,GACEA,KAkHV,SAASvB,EAAoBF,EAAUP,GACrC,IAAII,EAASG,EAAS1B,SAASmB,EAAQI,QACvC,QA1TE1F,IA0TE0F,EAAsB,CAKxB,GAFAJ,EAAQO,SAAW,KAEI,UAAnBP,EAAQI,OAAoB,CAE9B,GAAIG,EAAS1B,SAAiB,SAG5BmB,EAAQI,OAAS,SACjBJ,EAAQrG,SArUZe,EAsUI+F,EAAoBF,EAAUP,GAEP,UAAnBA,EAAQI,QAGV,OAAOM,EAIXV,EAAQI,OAAS,QACjBJ,EAAQrG,IAAM,IAAI0I,UAChB,kDAGJ,OAAO3B,EAGT,IAAIK,EAASC,EAASZ,EAAQG,EAAS1B,SAAUmB,EAAQrG,KAEzD,GAAoB,UAAhBoH,EAAOE,KAIT,OAHAjB,EAAQI,OAAS,QACjBJ,EAAQrG,IAAMoH,EAAOpH,IACrBqG,EAAQO,SAAW,KACZG,EAGT,IAAI9G,EAAOmH,EAAOpH,IAElB,OAAMC,EAOFA,EAAKG,MAGPiG,EAAQO,EAAS+B,YAAc1I,EAAKC,MAGpCmG,EAAQuC,KAAOhC,EAASiC,QAQD,WAAnBxC,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQrG,SAzXVe,GAmYFsF,EAAQO,SAAW,KACZG,GANE9G,GA3BPoG,EAAQI,OAAS,QACjBJ,EAAQrG,IAAM,IAAI0I,UAAU,oCAC5BrC,EAAQO,SAAW,KACZG,GAoDX,SAAS+B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBrI,KAAK2I,WAAWrH,KAAKgH,GAGvB,SAASM,EAAcN,GACrB,IAAI5B,EAAS4B,EAAMO,YAAc,GACjCnC,EAAOE,KAAO,gBACPF,EAAOpH,IACdgJ,EAAMO,WAAanC,EAGrB,SAASd,EAAQN,GAIftF,KAAK2I,WAAa,CAAC,CAAEJ,OAAQ,SAC7BjD,EAAYlE,QAAQgH,EAAcpI,MAClCA,KAAK8I,OAAM,GA8Bb,SAASzB,EAAO0B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASxE,GAC9B,GAAIyE,EACF,OAAOA,EAAelC,KAAKiC,GAG7B,GAA6B,mBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAAS5F,QAAS,CAC3B,IAAI+F,GAAK,EAAGhB,EAAO,SAASA,IAC1B,OAASgB,EAAIH,EAAS5F,QACpB,GAAIgB,EAAO2C,KAAKiC,EAAUG,GAGxB,OAFAhB,EAAK1I,MAAQuJ,EAASG,GACtBhB,EAAKxI,MAAO,EACLwI,EAOX,OAHAA,EAAK1I,WAzeTa,EA0eI6H,EAAKxI,MAAO,EAELwI,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMjC,GAIjB,SAASA,IACP,MAAO,CAAEzG,WAzfPa,EAyfyBX,MAAM,GA+MnC,OA5mBAqH,EAAkB7C,UAAYoD,EAAG6B,YAAcnC,EAC/CA,EAA2BmC,YAAcpC,EACzCA,EAAkBqC,YAAcvE,EAC9BmC,EACArC,EACA,qBAaFb,EAAQuF,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASxC,GAG2B,uBAAnCwC,EAAKH,aAAeG,EAAKhI,QAIhCuC,EAAQ0F,KAAO,SAASF,GAQtB,OAPIrF,OAAOwF,eACTxF,OAAOwF,eAAeH,EAAQtC,IAE9BsC,EAAOI,UAAY1C,EACnBnC,EAAOyE,EAAQ3E,EAAmB,sBAEpC2E,EAAOpF,UAAYD,OAAOyB,OAAO4B,GAC1BgC,GAOTxF,EAAQ6F,MAAQ,SAASrK,GACvB,MAAO,CAAEwI,QAASxI,IAsEpBiI,EAAsBC,EAActD,WACpCsD,EAActD,UAAUO,GAAuB,WAC7C,OAAOzE,MAET8D,EAAQ0D,cAAgBA,EAKxB1D,EAAQ8F,MAAQ,SAASxE,EAASC,EAAStF,EAAMuF,EAAamC,QACxC,IAAhBA,IAAwBA,EAAc9H,SAE1C,IAAIkK,EAAO,IAAIrC,EACbrC,EAAKC,EAASC,EAAStF,EAAMuF,GAC7BmC,GAGF,OAAO3D,EAAQuF,oBAAoBhE,GAC/BwE,EACAA,EAAK3B,OAAOtI,MAAK,SAASiI,GACxB,OAAOA,EAAOnI,KAAOmI,EAAOrI,MAAQqK,EAAK3B,WAuKjDX,EAAsBD,GAEtBzC,EAAOyC,EAAI3C,EAAmB,aAO9B2C,EAAG/C,GAAkB,WACnB,OAAOvE,MAGTsH,EAAGwC,SAAW,WACZ,MAAO,sBAkCThG,EAAQiG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAI1K,KAAO2K,EACdD,EAAKzI,KAAKjC,GAMZ,OAJA0K,EAAKE,UAIE,SAAS/B,IACd,KAAO6B,EAAK5G,QAAQ,CAClB,IAAI9D,EAAM0K,EAAKG,MACf,GAAI7K,KAAO2K,EAGT,OAFA9B,EAAK1I,MAAQH,EACb6I,EAAKxI,MAAO,EACLwI,EAQX,OADAA,EAAKxI,MAAO,EACLwI,IAsCXpE,EAAQuD,OAASA,EAMjBzB,EAAQ1B,UAAY,CAClBiF,YAAavD,EAEbkD,MAAO,SAASqB,GAcd,GAbAnK,KAAKoK,KAAO,EACZpK,KAAKkI,KAAO,EAGZlI,KAAKsG,KAAOtG,KAAKuG,WApgBjBlG,EAqgBAL,KAAKN,MAAO,EACZM,KAAKkG,SAAW,KAEhBlG,KAAK+F,OAAS,OACd/F,KAAKV,SAzgBLe,EA2gBAL,KAAK2I,WAAWvH,QAAQwH,IAEnBuB,EACH,IAAK,IAAI5I,KAAQvB,KAEQ,MAAnBuB,EAAK8I,OAAO,IACZlG,EAAO2C,KAAK9G,KAAMuB,KACjB0H,OAAO1H,EAAKW,MAAM,MACrBlC,KAAKuB,QAnhBXlB,IAyhBFiK,KAAM,WACJtK,KAAKN,MAAO,EAEZ,IACI6K,EADYvK,KAAK2I,WAAW,GACLE,WAC3B,GAAwB,UAApB0B,EAAW3D,KACb,MAAM2D,EAAWjL,IAGnB,OAAOU,KAAKwK,MAGdhE,kBAAmB,SAASiE,GAC1B,GAAIzK,KAAKN,KACP,MAAM+K,EAGR,IAAI9E,EAAU3F,KACd,SAAS0K,EAAOC,EAAKC,GAYnB,OAXAlE,EAAOE,KAAO,QACdF,EAAOpH,IAAMmL,EACb9E,EAAQuC,KAAOyC,EAEXC,IAGFjF,EAAQI,OAAS,OACjBJ,EAAQrG,SApjBZe,KAujBYuK,EAGZ,IAAK,IAAI1B,EAAIlJ,KAAK2I,WAAWxF,OAAS,EAAG+F,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQtI,KAAK2I,WAAWO,GACxBxC,EAAS4B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOmC,EAAO,OAGhB,GAAIpC,EAAMC,QAAUvI,KAAKoK,KAAM,CAC7B,IAAIS,EAAW1G,EAAO2C,KAAKwB,EAAO,YAC9BwC,EAAa3G,EAAO2C,KAAKwB,EAAO,cAEpC,GAAIuC,GAAYC,EAAY,CAC1B,GAAI9K,KAAKoK,KAAO9B,EAAME,SACpB,OAAOkC,EAAOpC,EAAME,UAAU,GACzB,GAAIxI,KAAKoK,KAAO9B,EAAMG,WAC3B,OAAOiC,EAAOpC,EAAMG,iBAGjB,GAAIoC,GACT,GAAI7K,KAAKoK,KAAO9B,EAAME,SACpB,OAAOkC,EAAOpC,EAAME,UAAU,OAG3B,KAAIsC,EAMT,MAAM,IAAI9E,MAAM,0CALhB,GAAIhG,KAAKoK,KAAO9B,EAAMG,WACpB,OAAOiC,EAAOpC,EAAMG,gBAU9BhC,OAAQ,SAASG,EAAMtH,GACrB,IAAK,IAAI4J,EAAIlJ,KAAK2I,WAAWxF,OAAS,EAAG+F,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQtI,KAAK2I,WAAWO,GAC5B,GAAIZ,EAAMC,QAAUvI,KAAKoK,MACrBjG,EAAO2C,KAAKwB,EAAO,eACnBtI,KAAKoK,KAAO9B,EAAMG,WAAY,CAChC,IAAIsC,EAAezC,EACnB,OAIAyC,IACU,UAATnE,GACS,aAATA,IACDmE,EAAaxC,QAAUjJ,GACvBA,GAAOyL,EAAatC,aAGtBsC,EAAe,MAGjB,IAAIrE,EAASqE,EAAeA,EAAalC,WAAa,GAItD,OAHAnC,EAAOE,KAAOA,EACdF,EAAOpH,IAAMA,EAETyL,GACF/K,KAAK+F,OAAS,OACd/F,KAAKkI,KAAO6C,EAAatC,WAClBpC,GAGFrG,KAAKgL,SAAStE,IAGvBsE,SAAU,SAAStE,EAAQgC,GACzB,GAAoB,UAAhBhC,EAAOE,KACT,MAAMF,EAAOpH,IAcf,MAXoB,UAAhBoH,EAAOE,MACS,aAAhBF,EAAOE,KACT5G,KAAKkI,KAAOxB,EAAOpH,IACM,WAAhBoH,EAAOE,MAChB5G,KAAKwK,KAAOxK,KAAKV,IAAMoH,EAAOpH,IAC9BU,KAAK+F,OAAS,SACd/F,KAAKkI,KAAO,OACa,WAAhBxB,EAAOE,MAAqB8B,IACrC1I,KAAKkI,KAAOQ,GAGPrC,GAGT4E,OAAQ,SAASxC,GACf,IAAK,IAAIS,EAAIlJ,KAAK2I,WAAWxF,OAAS,EAAG+F,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQtI,KAAK2I,WAAWO,GAC5B,GAAIZ,EAAMG,aAAeA,EAGvB,OAFAzI,KAAKgL,SAAS1C,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPjC,IAKb,MAAS,SAASkC,GAChB,IAAK,IAAIW,EAAIlJ,KAAK2I,WAAWxF,OAAS,EAAG+F,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQtI,KAAK2I,WAAWO,GAC5B,GAAIZ,EAAMC,SAAWA,EAAQ,CAC3B,IAAI7B,EAAS4B,EAAMO,WACnB,GAAoB,UAAhBnC,EAAOE,KAAkB,CAC3B,IAAIsE,EAASxE,EAAOpH,IACpBsJ,EAAcN,GAEhB,OAAO4C,GAMX,MAAM,IAAIlF,MAAM,0BAGlBmF,cAAe,SAASpC,EAAUd,EAAYE,GAa5C,OAZAnI,KAAKkG,SAAW,CACd1B,SAAU6C,EAAO0B,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhBnI,KAAK+F,SAGP/F,KAAKV,SA7rBPe,GAgsBOgG,IAQJvC,EA7sBK,CAotBiBD,EAAOC,SAGtC,IACEsH,mBAAqBrH,EACrB,MAAOsH,GAUPC,SAAS,IAAK,yBAAdA,CAAwCvH","file":"4445f123d3d9a3bc1afacf74640234ff6334a115-700ee84fb596c2d12308.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\"\n\nexport default ({results, repos}) => {\n  return (\n    <>\n      {results ? (\n        <ul>\n          {repos.map(val => (\n            <li key={val.raw_url || val}>\n              <div dangerouslySetInnerHTML={{ __html: val.url || val }} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <ul>\n          <li>loading...</li>\n        </ul>\n      )}\n    </>\n  )\n}\n","const REPO_URL = 'https://api.github.com/users/joshayoung/repos';\n\nconst top = function(data) {\n  if (!Array.isArray(data)) { return []; }\n\n  let all = []\n  data.forEach((repo, value) => {\n    all.push({\n      name: repo.name,\n      url: \"<a href='\" + repo.html_url + \"'>\" + repo.name + \"</a>\",\n      raw_url: repo.url,\n      updated: repo.updated_at,\n      language: repo.language,\n      created_at: repo.created_at.split(\"T\")[0],\n    })\n  })\n  all.sort(function(a, b) {\n    return new Date(b.updated) - new Date(a.updated)\n  })\n  return all.slice(0, 3)\n}\n\nconst getData = async url => {\n  let t = \n  process.env.GATSBY_TOKEN;\n  const response = await fetch(url, {\n    headers: { Authorization: \"token \" + t },\n  });\n  return response.json();\n};\n\nconst tags = data => {\n  let allTags = [];\n  data.forEach(tag => {\n    allTags.push({ name: tag.name, url: tag.tags_url });\n  });\nlet tagsUrl = [];\nallTags.forEach(tag => {\n    tagsUrl.push(getData(tag.url));\n});\n  return tagsUrl;\n};\n\nconst featureCompleteRepos = (tagsUrl) => {\n    return Promise.all(tagsUrl).then(all => {\n    let archived = [];\n    all.forEach(t => {\n    archived.push(t);\n    });\n    return archived.filter(a => a.length !== 0);\n    });\n}\n\nconst archivedRepos = (tagsUrl) => {\n    return Promise.all(tagsUrl).then(all => {\n    let archived = [];\n    all.forEach(t => {\n    archived.push(t);\n    });\n    return archived.filter(a => a.length !== 0);\n    });\n}\n\nconst repoName = name => {\n  return name.zipball_url.split(\"/\")[5];\n};\n\nconst archivedTags = data => {\n  let archived = [];\n  data.forEach(tg => {\n    let repo = tg.filter(value => value.name === \"archived\");\n    if (repo.length > 0) {\n      archived.push(repoName(repo[0]));\n    }\n  });\n  return archived;\n};\n\nconst completedTags = data => {\n  let archived = [];\n  data.forEach(tg => {\n    let repo = tg.filter(value => value.name === \"feature-complete\");\n    if (repo.length > 0) {\n      archived.push(repoName(repo[0]));\n    }\n  });\n  return archived;\n};\n\nexport { top, REPO_URL, tags, featureCompleteRepos, archivedRepos, getData, archivedTags, completedTags };","import React from \"react\";\nimport { css } from '@emotion/core';\n\nconst List = ({ children }) => (\n  <div css={css`\n    margin-bottom: 50px;\n    &.last {\n      margin-bottom: 0;\n    }\n    header {\n      font-family: 'Acme', sans-serif;\n      color:#3385ff;\n      padding: 3px;\n      &:before {\n        content: \"{ \";\n        color: #b3b3b3;\n      }\n      &:after {\n        content: \" }\";\n        color: #b3b3b3;\n      }\n    }\n  `}>\n    {children}\n  </div>\n);\n\nexport default List;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}