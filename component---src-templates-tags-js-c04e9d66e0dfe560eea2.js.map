{"version":3,"file":"component---src-templates-tags-js-c04e9d66e0dfe560eea2.js","mappings":"0IA0DA,UAnDaA,IAA4B,IAA3B,YAAEC,EAAW,KAAEC,GAAMF,EACjC,MAAM,IAAEG,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,kBAC7BC,EAAeF,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IAEpB,OACEK,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAAA,UAAKD,IACLC,EAAAA,EAAAA,IAAA,UACGJ,EAAMM,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,aAChB,MAAEC,GAAUH,EAAKE,YACvB,OACEN,EAAAA,EAAAA,IAAA,MAAIQ,IAAKD,IACPP,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,GAAIL,GAAOE,GACd,KAGTP,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,GAAG,SAAQ,kBAGd,C","sources":["webpack:///./src/templates/tags.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/layout\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { path } = node.frontmatter;\n          const { title } = node.frontmatter;\n          return (\n            <li key={title}>\n              <Link to={path}>{title}</Link>\n            </li>\n          );\n        })}\n        <li>\n          <Link to=\"/tags\">See All tags</Link>\n        </li>\n      </ul>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","___EmotionJSX","Layout","map","_ref2","node","path","frontmatter","title","key","Link","to"],"sourceRoot":""}