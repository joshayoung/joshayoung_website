{"version":3,"file":"component---src-pages-definitions-md-51c79a731cf38053fc85.js","mappings":"wOAwBA,EAtBuB,WAcrB,OAbaA,EAAAA,EAAAA,IAAe,YAahBC,mBAAmBC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CAChDC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXC,WAAYJ,EAAKI,gB,UCjBrB,aACE,IAAMC,EAAcC,IAEpB,OACE,kBACGD,EAAYN,KAAI,SAAAK,GAAU,OACzB,eAAKG,IAAKH,EAAWD,OACnB,kBAAKC,EAAWD,OAChB,kBACGC,EAAWA,WACS,KAApBA,EAAWF,MAAmC,OAApBE,EAAWF,MACpC,aACEM,OAAO,SACPC,IAAI,sBACJC,KAAMN,EAAWF,MAHnB,cAQA,U,iBCbDS,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,8CACA,oMACA,QAAC,EAAD,CAAmBA,QAAQ,uBAK/BH,EAAWI,gBAAiB,G,uDCf5B,IAVuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrB,yBACE,QAAC,IAAD,CAAQA,SAAUA,EAAUC,MAAM,gB,qBCNvB,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIhB,EAAKkB,EAFLjB,EAAS,GACTkB,EAAaC,OAAOC,KAAKL,GAG7B,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IACjClB,EAAMmB,EAAWD,GACbD,EAASM,QAAQvB,IAAQ,IAC7BC,EAAOD,GAAOgB,EAAOhB,IAGvB,OAAOC,E","sources":["webpack:///./src/hooks/definition-data.js","webpack:///./src/output/definitions-output.js","webpack:///./src/pages/definitions.md","webpack:///./src/components/layout-markdown.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\n\nconst DefinitionData = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allDefinitionsJson(sort: { fields: word }) {\n        nodes {\n          id\n          link\n          word\n          definition\n        }\n      }\n    }\n  `);\n\n  return data.allDefinitionsJson.nodes.map(data => ({\n    id: data.id,\n    link: data.link,\n    word: data.word,\n    definition: data.definition,\n  }));\n};\n\nexport default DefinitionData;\n","import React from \"react\";\nimport DefinitionData from \"../hooks/definition-data\";\n\nexport default () => {\n  const definitions = DefinitionData();\n\n  return (\n    <dl>\n      {definitions.map(definition => (\n        <div key={definition.word}>\n          <dt>{definition.word}</dt>\n          <dd>\n            {definition.definition}\n            {definition.link !== \"\" && definition.link !== null ? (\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={definition.link}\n              >\n                (resource)\n              </a>\n            ) : (\n              \"\"\n            )}\n          </dd>\n        </div>\n      ))}\n    </dl>\n  );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/josh.young/Code/hub/joshayoung_website/src/components/layout-markdown.js\";\nimport DefinitionsOutput from \"../output/definitions-output\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Programming Definitions`}</h1>\n    <p>{`These are some of the terms I have been introduced to over the years. In an effort to remember these and have a convenient place to reference, I have added them to this page.`}</p>\n    <DefinitionsOutput mdxType=\"DefinitionsOutput\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\n\nconst LayoutMarkdown = ({ children }) => (\n  <>\n    <Layout children={children} klass=\"markdown\" />\n  </>\n);\n\nLayoutMarkdown.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nexport default LayoutMarkdown;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["useStaticQuery","allDefinitionsJson","nodes","map","data","id","link","word","definition","definitions","DefinitionData","key","target","rel","href","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent","children","klass","_objectWithoutPropertiesLoose","source","excluded","i","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}