(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{XOS9:function(e,t,n){"use strict";var l=n("q1tI"),a=n.n(l),b=n("Bl7J"),c=n("qKvR");t.a=function(e){var t=e.children;return Object(c.d)(a.a.Fragment,null,Object(c.d)(b.a,{children:t,klass:"markdown"}))}},Z41s:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return w})),n.d(t,"default",(function(){return k}));var l=n("wx14"),a=n("zLVn"),b=n("q1tI"),c=n.n(b),r=n("7ljp"),s=n("XOS9"),d=n("qKvR"),o=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Output selected element in console"),Object(d.d)("dd",null,Object(d.d)("code",null,"$0")),Object(d.d)("dt",null,"Logging:"),Object(d.d)("dd",null,Object(d.d)("code",null,"console.log('test string');")),Object(d.d)("dt",null,"Log Variable as an Object:"),Object(d.d)("dd",null,Object(d.d)("code",null,"console.dir(paragraph);")),Object(d.d)("dt",null,"Log an object as a table:"),Object(d.d)("dd",null,Object(d.d)("code",null,"console.table(all_animals);")))},u=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Show containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose ps")),Object(d.d)("dt",null,"List all Images"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker image ls -a")),Object(d.d)("dt",null,"List all Containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker container ls -a")),Object(d.d)("dt",null,"List all Volumes"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker volume ls")),Object(d.d)("dt",null,"Start containers in docker-compose"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose up")),Object(d.d)("dt",null,"Kill Dangling Docker Process:"),Object(d.d)("dd",null,Object(d.d)("code",null,Object(d.d)("pre",null,"docker-compose down docker rm -fv $(docker ps -aq) sudo lsof -i -P -n | grep 5432"))),Object(d.d)("dt",null,"Stop a container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker stop [container name]")),Object(d.d)("dt",null,"Stop Running Containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker container stop $(docker container list -q)")),Object(d.d)("dt",null,"Stop All Running Containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker container ps -q | xargs docker container stop")),Object(d.d)("dt",null,"Prune System - use caution with this"),Object(d.d)("dd",null,"docker system prune -a"),Object(d.d)("dt",null,"Delete All Images (be careful!)"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker image ls -q -a | xargs docker image rm -f")),Object(d.d)("dt",null,"Delete All Containers (be careful!)"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker container ps -q -a | xargs docker container rm")),Object(d.d)("dt",null,"Delete All Volumes (be careful!)"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker volume ls -q | xargs docker volume rm")),Object(d.d)("dt",null,"Copy File from Container to Host"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker cp container_name:/path/to/file/on/container.txt /path/on/host/")),Object(d.d)("dt",null,"Detach from a Running Container"),Object(d.d)("dd",null,"Ctrl+P then Ctrl+Q"),Object(d.d)("dt",null,"Re-attach to a Running Container"),Object(d.d)("dd",null,"docker attach [container id]"),Object(d.d)("dt",null,"Show Mounts"),Object(d.d)("dd",null,'docker inspect -f "{{ .Mounts }}" [container id]'),Object(d.d)("dt",null,"Show Docker Stats"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker stats")),Object(d.d)("dt",null,"Start a container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker start [container name]")),Object(d.d)("dt",null,"Docker `exec` vs `attach`"),Object(d.d)("dd",null,"`exec` creates a new instance of the container and connects to it. `attach` connects to the currently running instance."),Object(d.d)("dt",null,"Connect to a running container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker exec -it [image name] /bin/bash")),Object(d.d)("dt",null,"Spin up and Build"),Object(d.d)("dd",null,"docker-compose up --build"),Object(d.d)("dt",null,"Boot Up Detached"),Object(d.d)("dd",null,"docker-compose up -d"),Object(d.d)("dt",null,"Run, Build, and Detach"),Object(d.d)("dd",null,"docker-compose up --build -d"),Object(d.d)("dt",null,"Run a Service and Expose the Ports"),Object(d.d)("dd",null,"docker-compose run --service-ports dev rails server -b 0.0.0.0"),Object(d.d)("dt",null,"Docker compose - bust the cache"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose build --no-cache")),Object(d.d)("dt",null,"Run a single image through compose"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose run dev rails server -b 0.0.0.0")),Object(d.d)("dt",null,"Spin up container"),Object(d.d)("dt",null,"Start a Single Service via Docker Compose"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose up -d service_name")),Object(d.d)("dd",null,Object(d.d)("code",null,"docker restart $(docker ps -q)")),Object(d.d)("dt",null,"Force the Re-creation of Container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose up --force-recreate")),Object(d.d)("dt",null,"Restart All Containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose up")),Object(d.d)("dt",null,"Turn off container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose down")),Object(d.d)("dt",null,"List running containers"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker-compose ps")),Object(d.d)("dt",null,"Attach to running container"),Object(d.d)("dd",null,Object(d.d)("code",null,"docker exec -it [container name] /bin/bash")))},i=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"200"),Object(d.d)("dd",null,"Success"),Object(d.d)("dt",null,"301"),Object(d.d)("dd",null,"Moved"),Object(d.d)("dt",null,"403"),Object(d.d)("dd",null,"Forbidden"),Object(d.d)("dt",null,"404"),Object(d.d)("dd",null,"Not Found"))},p=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Connect to Database"),Object(d.d)("dd",null,Object(d.d)("code",null,"\\c DATABASE_NAME")),Object(d.d)("dt",null,"List Databases"),Object(d.d)("dd",null,Object(d.d)("code",null,"\\l")),Object(d.d)("dt",null,"Tables in database:"),Object(d.d)("dd",null,Object(d.d)("code",null,"\\dt")),Object(d.d)("dt",null,"Connect with admin user:"),Object(d.d)("dd",null,"psql -U postgres"),Object(d.d)("dt",null,"Connect with user to a specific database"),Object(d.d)("dd",null,"psql -U username database_name"),Object(d.d)("dt",null,"Show Users"),Object(d.d)("dd",null,"\\du"),Object(d.d)("dt",null,"Create User, Database, Grant Privileges"),Object(d.d)("dd",null,"CREATE USER my_user_name WITH PASSWORD 'MY_PASSWORD'; CREATE DATABASE my_user_db; GRANT ALL PRIVILEGES ON DATABASE my_user_db to my_user_name;"),Object(d.d)("dt",null,"Describe Table"),Object(d.d)("dd",null,Object(d.d)("code",null,"\\dt+")),Object(d.d)("dt",null,"Leave SQL Server"),Object(d.d)("dd",null,Object(d.d)("code",null,"\\q")),Object(d.d)("dt",null,"Connect to Postgres"),Object(d.d)("dd",null,Object(d.d)("code",null,"psql postgres")),Object(d.d)("dt",null,"Create User"),Object(d.d)("dd",null,Object(d.d)("code",null,"CREATE USER myuser WITH PASSWORD 'my password';")),Object(d.d)("dt",null,"Create Role"),Object(d.d)("dd",null,Object(d.d)("code",null,"CREATE ROLE myuser WITH LOGIN PASSWORD 'my password';")),Object(d.d)("dt",null,"Alter Role"),Object(d.d)("dd",null,Object(d.d)("code",null,"ALTER USER myuser WITH CREATEDB;")))},j=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Swim Lanes"),Object(d.d)("dd",null,"Rows"),Object(d.d)("dt",null,"WIP"),Object(d.d)("dd",null,"Work In Progress"),Object(d.d)("dt",null,"WIP Limit"),Object(d.d)("dd",null,"The maximum amount of cards allowed in one column on the board"),Object(d.d)("dt",null,"Blocker"),Object(d.d)("dd",null,"Something that is preventing you from moving your card forward"),Object(d.d)("dt",null,"Hidden Work"),Object(d.d)("dd",null,"Something you are working on that is not visible on the Kanban Board"))},O=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Open Context Menu"),Object(d.d)("dd",null,Object(d.d)("code",null,"Option(alt) + Enter")),Object(d.d)("dt",null,"Search for Files"),Object(d.d)("dd",null,Object(d.d)("code",null,"SHIFT + SHIFT")),Object(d.d)("dt",null,"Search in Files"),Object(d.d)("dd",null,Object(d.d)("code",null,"CMD + SHIFT + F")),Object(d.d)("dt",null,"MVC Dialog"),Object(d.d)("dd",null,Object(d.d)("code",null,"CTRL + CMD + UP-ARROW")))},m=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Split Window Vertically:"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b %")),Object(d.d)("dt",null,"Open New Window"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + c")),Object(d.d)("dt",null,"Previous Window"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + l")),Object(d.d)("dt",null,"Navigate Between Windows"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + 0/1/2,etc")),Object(d.d)("dt",null,"Split Window Horizontally:"),Object(d.d)("dd",null,Object(d.d)("code",null,'Ctrl-b "')),Object(d.d)("dt",null,"Navigate Between Windows:"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b <ARROW KEYS>")),Object(d.d)("dt",null,"Detach from tmux:"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + d")),Object(d.d)("dt",null,"Re-attach to tmux:"),Object(d.d)("dd",null,Object(d.d)("code",null,"tmux attach -t <SESSION>")," (i.e. tmux attach -t 0)"),Object(d.d)("dt",null,"Show running tmux sessions:"),Object(d.d)("dd",null,Object(d.d)("code",null,"tmux ls")),Object(d.d)("dt",null,"Rename tmux Session:"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + $")),Object(d.d)("dt",null,"Full Screen"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + z")),Object(d.d)("dt",null,"Next Window"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + n")),Object(d.d)("dt",null,"Previous Window"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + p")),Object(d.d)("dt",null,"Open a Specific Session"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + <number>")),Object(d.d)("dt",null,"Detach Current Session"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl-b + d")),Object(d.d)("dt",null,"Start Session with Name"),Object(d.d)("dd",null,Object(d.d)("code",null,"tmux new -s [name]")),Object(d.d)("dt",null,"Close a Session with Name"),Object(d.d)("dd",null,Object(d.d)("code",null,"tmux kill-session -t [name]")),Object(d.d)("dt",null,"Rename Session"),Object(d.d)("dd",null,Object(d.d)("code",null,"tmux rename-session -t 0 [new name]")))},h=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Remove all folds"),Object(d.d)("dd",null,"zR"),Object(d.d)("dt",null,"Toggle fold inside current indent"),Object(d.d)("dd",null,"za"),Object(d.d)("dt",null,"Find Character Before"),Object(d.d)("dd",null,Object(d.d)("code",null,"t}")),Object(d.d)("dt",null,"Find Character Before Backwards"),Object(d.d)("dd",null,Object(d.d)("code",null,"T","{")),Object(d.d)("dt",null," Change to Found Char Before"),Object(d.d)("dd",null,Object(d.d)("code",null,"ct}")),Object(d.d)("dt",null,"Find Character"),Object(d.d)("dd",null,Object(d.d)("code",null,"f}")),Object(d.d)("dt",null,"Find Character Backwards"),Object(d.d)("dd",null,Object(d.d)("code",null,"F","{")),Object(d.d)("dt",null,"Change to Found Char"),Object(d.d)("dd",null,Object(d.d)("code",null,"cf}")),Object(d.d)("dt",null,"Re-run the last 'f' or 't' command"),Object(d.d)("dd",null,Object(d.d)("code",null,";")),Object(d.d)("dt",null,"Re-run the last 'F' or 'T' command"),Object(d.d)("dd",null,Object(d.d)("code",null,",")),Object(d.d)("dt",null,"End of Current Word"),Object(d.d)("dd",null,Object(d.d)("code",null,"ea")),Object(d.d)("dt",null,"Change Line"),Object(d.d)("dd",null,Object(d.d)("code",null,"cc")),Object(d.d)("dt",null,"Split Editor"),Object(d.d)("dd",null,Object(d.d)("code",null,":split(:sp) new_file_name")),Object(d.d)("dt",null,"Vertical Split Editor"),Object(d.d)("dd",null,Object(d.d)("code",null,":vsplit(:vs)")," new_file_name"),Object(d.d)("dt",null,"Switch Between Splits"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + w")),Object(d.d)("dt",null,"Mark Current Line"),Object(d.d)("dd",null,Object(d.d)("code",null,"m[a-z]")," (i.e. ",Object(d.d)("code",null,"ma"),")"),Object(d.d)("dt",null,'Go to Mark "h"'),Object(d.d)("dd",null,Object(d.d)("code",null,"'h")),Object(d.d)("dt",null,"Show all marks"),Object(d.d)("dd",null,Object(d.d)("code",null,":marks")),Object(d.d)("dt",null,"Mark Across Files"),Object(d.d)("dd",null,"Use an uppercase mark: ",Object(d.d)("code",null,"m[A-Z]")),Object(d.d)("dt",null,"Previous location (insert mode)"),Object(d.d)("dd",null,Object(d.d)("code",null,"gi")),Object(d.d)("dt",null,"Go to file under cursor"),Object(d.d)("dd",null,Object(d.d)("code",null,"gf")),Object(d.d)("dt",null,"Open shell from vi"),Object(d.d)("dd",null,Object(d.d)("code",null,":shell")),Object(d.d)("dt",null,"Close shell"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + d")),Object(d.d)("dt",null,"Open file browser"),Object(d.d)("dd",null,Object(d.d)("code",null,":E")),Object(d.d)("dt",null,"Show Registers"),Object(d.d)("dd",null,Object(d.d)("code",null,":reg")),Object(d.d)("dt",null,"Paste from # registers"),Object(d.d)("dd",null,Object(d.d)("code",null,'"[0-9]p')," (i.e. ",Object(d.d)("code",null,"0p"),", ",Object(d.d)("code",null,'"1p'),", etc.)"),Object(d.d)("dt",null,"Yank to register"),Object(d.d)("dd",null,Object(d.d)("code",null,'"[a-z]yy')," (then: ",Object(d.d)("code",null,'"ap')," to paste)"),Object(d.d)("dt",null,"Append to register"),Object(d.d)("dd",null,Object(d.d)("code",null,'"[A-Z]yy')," (then: ",Object(d.d)("code",null,'"Ap')," to paste)"),Object(d.d)("dt",null,"Paste from Clipboard"),Object(d.d)("dd",null,Object(d.d)("code",null,'"+p')),Object(d.d)("dt",null,"Record Macro"),Object(d.d)("dd",null,Object(d.d)("code",null,"q[a-z]")," (i.e. ",Object(d.d)("code",null,"qm")," - records to ",Object(d.d)("code",null,"m"),")"),Object(d.d)("dt",null,"Open Multiple Files"),Object(d.d)("dd",null,Object(d.d)("code",null,"vim *"),Object(d.d)("code",null,":bn - next file")),Object(d.d)("dt",null,"Stop Macro Recording"),Object(d.d)("dd",null,Object(d.d)("code",null,"q")),Object(d.d)("dt",null,"Execute Macro"),Object(d.d)("dd",null,Object(d.d)("code",null,"@[a-z]")," (i.e. ",Object(d.d)("code",null,"@m")," or ",Object(d.d)("code",null,"20 @m")," to run 20 times"),Object(d.d)("dt",null,"Increment Number"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + a")),Object(d.d)("dt",null,"Search / Replace Globally"),Object(d.d)("dd",null,Object(d.d)("code",null,":%s/searchfor/replacewith/g")),Object(d.d)("dt",null,"Search / Replace Current Line"),Object(d.d)("dd",null,Object(d.d)("code",null,":s/searchfor/replacewith/g")),Object(d.d)("dt",null,"Search / Replace (confirmation)"),Object(d.d)("dd",null,Object(d.d)("code",null,":%s/searchfor/replacewith/gc")),Object(d.d)("dt",null,"High, Middle, Low"),Object(d.d)("dd",null,Object(d.d)("code",null,"H, M, L")),Object(d.d)("dt",null,"Move up/down"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + U / Ctrl + D")),Object(d.d)("dt",null,"Move to line 11"),Object(d.d)("dd",null,Object(d.d)("code",null,"11 + G")),Object(d.d)("dt",null,"Indent to surroundings"),Object(d.d)("dd",null,Object(d.d)("code",null,"==")),Object(d.d)("dt",null,"Delete around and within"),Object(d.d)("dd",null,Object(d.d)("code",null,"daw / diw")),Object(d.d)("dt",null,"Delete inner paragraph"),Object(d.d)("dd",null,Object(d.d)("code",null,"dip")),Object(d.d)("dt",null,"Indent a paragraph"),Object(d.d)("dd",null,Object(d.d)("code",null,">ip")),Object(d.d)("dt",null,"Reverse paragraph indent"),Object(d.d)("dd",null,Object(d.d)("code",null,"=ip")),Object(d.d)("dt",null,"Change between html tags"),Object(d.d)("dd",null,Object(d.d)("code",null,"cit")),Object(d.d)("dt",null,"Delete html tag"),Object(d.d)("dd",null,Object(d.d)("code",null,"dat")),Object(d.d)("dt",null,"Open New Window"),Object(d.d)("dd",null,Object(d.d)("code",null,":new")," file_name.txt"),Object(d.d)("dt",null,"Open Vertical Window"),Object(d.d)("dd",null,Object(d.d)("code",null,":vnew")," file_name.txt"),Object(d.d)("dt",null,"Go to file"),Object(d.d)("dd",null,Object(d.d)("code",null,"gf")),Object(d.d)("dt",null,"Go Back to prev file"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + o")),Object(d.d)("dt",null,"Open New Tab"),Object(d.d)("dd",null,Object(d.d)("code",null,":tabnew")),Object(d.d)("dt",null,"Edit File in Tab"),Object(d.d)("dd",null,Object(d.d)("code",null,":tabedit")," file_name.txt"),Object(d.d)("dt",null,"Move forward in tabs"),Object(d.d)("dd",null,Object(d.d)("code",null,"gt")),Object(d.d)("dt",null,"Move backward in tabs"),Object(d.d)("dd",null,Object(d.d)("code",null,"gT")),Object(d.d)("dt",null,"Open Visual Block mode"),Object(d.d)("dd",null,Object(d.d)("code",null,"Ctrl + V")),Object(d.d)("dt",null,"Move to beggining of line"),Object(d.d)("dd",null,Object(d.d)("code",null,"0")),Object(d.d)("dt",null,"Open NETRW file exporer"),Object(d.d)("dd",null,Object(d.d)("code",null,":e .")),Object(d.d)("dt",null,"Open a file at a line number"),Object(d.d)("dd",null,"vim /path/to/file.conf +120"))},g=function(){return Object(d.d)("dl",null,Object(d.d)("dt",null,"Output HTML Boilerplate"),Object(d.d)("dd",null,Object(d.d)("code",null,"html:5 + TAB")))},N=n("eBQ+"),f=function(){return Object(d.d)(c.a.Fragment,null,Object(d.d)("li",null,Object(d.d)("a",{href:"#ansible"},"Ansible")),Object(d.d)("li",null,Object(d.d)("a",{href:"#bash"},"Bash")),Object(d.d)("li",null,Object(d.d)("a",{href:"#blazor"},"Blazor")),Object(d.d)("li",null,Object(d.d)("a",{href:"#bundler"},"Bundler")),Object(d.d)("li",null,Object(d.d)("a",{href:"#csharp"},"C#")),Object(d.d)("li",null,Object(d.d)("a",{href:"#css"},"CSS")),Object(d.d)("li",null,Object(d.d)("a",{href:"#curl"},"Curl")),Object(d.d)("li",null,Object(d.d)("a",{href:"#dev_tools"},"Dev Tools")),Object(d.d)("li",null,Object(d.d)("a",{href:"#docker"},"Docker")),Object(d.d)("li",null,Object(d.d)("a",{href:"#http"},"HTTP")),Object(d.d)("li",null,Object(d.d)("a",{href:"#html5"},"HTML")),Object(d.d)("li",null,Object(d.d)("a",{href:"#firewalld"},"Firewalld")),Object(d.d)("li",null,Object(d.d)("a",{href:"#gatsby"},"Gatsby")),Object(d.d)("li",null,Object(d.d)("a",{href:"#java"},"Java")),Object(d.d)("li",null,Object(d.d)("a",{href:"#git"},"Git")),Object(d.d)("li",null,Object(d.d)("a",{href:"#github"},"GitHub")),Object(d.d)("li",null,Object(d.d)("a",{href:"#javascript"},"JavaScript")),Object(d.d)("li",null,Object(d.d)("a",{href:"#kanban"},"Kanban")),Object(d.d)("li",null,Object(d.d)("a",{href:"#laravel"},"Laravel")),Object(d.d)("li",null,Object(d.d)("a",{href:"#linux"},"Linux")),Object(d.d)("li",null,Object(d.d)("a",{href:"#arch"},"Arch")),Object(d.d)("li",null,Object(d.d)("a",{href:"#slackware"},"Slackware")),Object(d.d)("li",null,Object(d.d)("a",{href:"#centos-rhel"},"CentOS/RHEL")),Object(d.d)("li",null,Object(d.d)("a",{href:"#ubuntu-debian"},"Ubuntu/Debian")),Object(d.d)("li",null,Object(d.d)("a",{href:"#freebsd"},"FreeBSD")),Object(d.d)("li",null,Object(d.d)("a",{href:"#mac"},"Mac")),Object(d.d)("li",null,Object(d.d)("a",{href:"#node"},"Node")),Object(d.d)("li",null,Object(d.d)("a",{href:"#react"},"React")),Object(d.d)("li",null,Object(d.d)("a",{href:"#mysql"},"MySql")),Object(d.d)("li",null,Object(d.d)("a",{href:"#netstat"},"Netstat")),Object(d.d)("li",null,Object(d.d)("a",{href:"#text"},"Text")),Object(d.d)("li",null,Object(d.d)("a",{href:"#php"},"PHP")),Object(d.d)("li",null,Object(d.d)("a",{href:"#psql"},"PostgreSQL")),Object(d.d)("li",null,Object(d.d)("a",{href:"#python"},"Python")),Object(d.d)("li",null,Object(d.d)("a",{href:"#rails"},"Rails")),Object(d.d)("li",null,Object(d.d)("a",{href:"#ruby"},"Ruby")),Object(d.d)("li",null,Object(d.d)("a",{href:"#rubymine"},"RubyMine")),Object(d.d)("li",null,Object(d.d)("a",{href:"#intellij"},"intellij")),Object(d.d)("li",null,Object(d.d)("a",{href:"#scp"},"SCP")),Object(d.d)("li",null,Object(d.d)("a",{href:"#ssh"},"SSH")),Object(d.d)("li",null,Object(d.d)("a",{href:"#sqlite"},"SQLite")),Object(d.d)("li",null,Object(d.d)("a",{href:"#security"},"Security")),Object(d.d)("li",null,Object(d.d)("a",{href:"#svg"},"SVG")),Object(d.d)("li",null,Object(d.d)("a",{href:"#security"},"Security")),Object(d.d)("li",null,Object(d.d)("a",{href:"#testing"},"Testing")),Object(d.d)("li",null,Object(d.d)("a",{href:"#tmux"},"Tmux")),Object(d.d)("li",null,Object(d.d)("a",{href:"#ufw"},"UFW")),Object(d.d)("li",null,Object(d.d)("a",{href:"#vim"},"Vim")),Object(d.d)("li",null,Object(d.d)("a",{href:"#vs_code"},"VS Code")),Object(d.d)("li",null,Object(d.d)("a",{href:"#windows"},"Windows")),Object(d.d)("li",null,Object(d.d)("a",{href:"#xamarin"},"Xamarin")),Object(d.d)("li",null,Object(d.d)("a",{href:"#yarn"},"Yarn")),Object(d.d)("li",null,Object(d.d)("a",{href:"#zfs"},"ZFS")))},y=["components"],w={},v={_frontmatter:w},S=s.a;function k(e){var t=e.components,n=Object(a.a)(e,y);return Object(r.b)(S,Object(l.a)({},v,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"Code Snippets"),Object(r.b)("p",null,"Below, I have listed some common code snippets that I commonly go back to reference. Maybe you will find some of these useful. I update these routinely and add new ones as I run across them."),Object(r.b)(N.a,{mdxType:"AnchorList"},Object(r.b)(f,{mdxType:"SnippetAnchorList"})),Object(r.b)("h3",null,Object(r.b)("a",{id:"ansible"}),"Ansible"),Object(r.b)("h4",null,"Ping Command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ansible all --key-file ~/.ssh/my_private_key -i inventory -m ping\n")),Object(r.b)("h4",null,"Run gather facts command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ansible all -m gather_facts --limit 192.168.1.100\n")),Object(r.b)("h4",null,"Become sudo first:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ansible all -m apt -a update_cache=true --become --ask-become-pass\n")),Object(r.b)("h4",null,"Run a playbook:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ansible-playbook --ask-become-pass playboo.yml\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"bash"}),"Bash"),Object(r.b)("h4",null,"Services Running on Port"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  sudo lsof -i tcp:3000\n")),Object(r.b)("h4",null,"If/Else"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  if [ expression ]\n    ...\n  then\n    ...\n  else\n    ...\n  fi\n")),Object(r.b)("h4",null,"Assign Variable (spacing is important)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  the_var="a string"\n  echo $the_var\n')),Object(r.b)("h4",null,"Show a process running on a particular port"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  netstat -na | grep -i LISTEN | grep '2000\\|3000'\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"text"}),"Text"),Object(r.b)("h4",null,"Keyboard Shortcuts for Quote Marks"),Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",null,"Key"),Object(r.b)("th",null,"Description"),Object(r.b)("th",null,"Windows"),Object(r.b)("th",null,"Mac"),Object(r.b)("th",null,"HTML"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("th",null,"…"),Object(r.b)("td",null,"Ellipsis"),Object(r.b)("td",null,"alt+0133"),Object(r.b)("td",null,"option+;"),Object(r.b)("td",null,"&#x2026;")),Object(r.b)("tr",null,Object(r.b)("th",null,"‘"),Object(r.b)("td",null,"Opening Single Apostrophe"),Object(r.b)("td",null,"alt+0145"),Object(r.b)("td",null,"option+]"),Object(r.b)("td",null,"&lsquo;")),Object(r.b)("tr",null,Object(r.b)("th",null,"’"),Object(r.b)("td",null,"Closing Single Apostrophe"),Object(r.b)("td",null,"alt+0146"),Object(r.b)("td",null,"option+shift+]"),Object(r.b)("td",null,"&rsquo;")),Object(r.b)("tr",null,Object(r.b)("th",null,"“"),Object(r.b)("td",null,"Opening Double Quote"),Object(r.b)("td",null,"alt+0147"),Object(r.b)("td",null,"option+["),Object(r.b)("td",null,"&ldquo;")),Object(r.b)("tr",null,Object(r.b)("th",null,"”"),Object(r.b)("td",null,"Closing Double Quote"),Object(r.b)("td",null,"alt+0148"),Object(r.b)("td",null,"option+shift+["),Object(r.b)("td",null,"&rdquo;")),Object(r.b)("tr",null,Object(r.b)("th",null,"'"),Object(r.b)("td",null,"Straight Single Apostrophe"),Object(r.b)("td",null,"'"),Object(r.b)("td",null,"'"),Object(r.b)("td",null,"'")),Object(r.b)("tr",null,Object(r.b)("th",null,'"'),Object(r.b)("td",null,"Straight Double Quote"),Object(r.b)("td",null,'"'),Object(r.b)("td",null,'"'),Object(r.b)("td",null,'"')),Object(r.b)("tr",null,Object(r.b)("th",null,"–"),Object(r.b)("td",null,"En Dash"),Object(r.b)("td",null,"Ctrl + hyphen"),Object(r.b)("td",null,"Option + hyphen"),Object(r.b)("td",null,"alt+0150")),Object(r.b)("tr",null,Object(r.b)("th",null,"—"),Object(r.b)("td",null,"Em Dash"),Object(r.b)("td",null,"Ctrl + Alt + hyphen"),Object(r.b)("td",null,"Shift + Option + hyphen"),Object(r.b)("td",null,"alt+0151")))),Object(r.b)("h3",null,Object(r.b)("a",{id:"curl"}),"Curl"),Object(r.b)("h4",null,"Get HTTP Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  curl -I example.com\n")),Object(r.b)("h4",null,"Get Just Response Code"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  curl -s -o /dev/null -w "%{http_code}" example.com\n')),Object(r.b)("h4",null,"Curl POST"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'curl --data "information=to&send=to the server" http://example.com\n')),Object(r.b)("h3",null,Object(r.b)("a",{id:"blazor"}),"Blazor"),Object(r.b)("h3",null,Object(r.b)("a",{id:"bundler"}),"Bundler"),Object(r.b)("h4",null,"Install a different version of bundler"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  gem install bundler -v 1.0.10\n")),Object(r.b)("h4",null,"Run ",Object(r.b)("inlineCode",{parentName:"h4"},"bundle")," with a different version:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  bundle _2.0.15_ install\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"csharp"},"C#")),Object(r.b)("h4",null,"Test for Property Changed with xUnit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-csharp"},'  Assert.PropertyChanged(viewModel, nameof(viewModel.MyProperty), () => {\n    anotherProperty.Title = "new title";\n  });\n')),Object(r.b)("h4",null,"Invoke Property Change Event After List's Add()"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-csharp"},'  MyListOfValues.Add("an item");\n  PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(MyListOfValues)));\n')),Object(r.b)("h4",null,"Unused variable"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"For an unused variable (in a loop for instance), you can use an underscore ",Object(r.b)("inlineCode",{parentName:"li"},"_"),".")),Object(r.b)("h4",null,"Property vs Field"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A property is a field that has an implicit getter and setter set for it. This getter/setter is setup using the ",Object(r.b)("inlineCode",{parentName:"li"},"get;")," and ",Object(r.b)("inlineCode",{parentName:"li"},"set;"),". Usually this manifests itself as a public getter that returns a private field. Here is an example:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public string Name { get; set; };")))),Object(r.b)("li",{parentName:"ul"},"A field in C# does not have a backing field and has no getter or setter set for it. Here is an example:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public string Name;"))))),Object(r.b)("h4",null,"Prefer Named Arguments:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-csharp"},'  public void FullName(string first, string last)\n  {\n\n  }\n\n  // Call method like this:\n  fullName(first: "Joe", last: "Smith");\n\n  // Not like this:\n  fullName("Joe", "Smith");\n')),Object(r.b)("h3",null,Object(r.b)("a",{id:"css"}),"CSS"),Object(r.b)("h4",null,"Switch to box sizing"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"html {\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n")),Object(r.b)("h4",null,"Clear Floats"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.clearfix:after {\n  content: "";\n  display: block;\n  clear: both;\n  height: 0;\n  visibility: hidden;\n}\n')),Object(r.b)("h4",null,"Margin/Padding Shorthand"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"//top right bottom left:\nmargin(or padding): 10px 20px 10px 20px;\n\n//top/bottom left/right:\nmargin(or padding): 10px 20px;\n\n//top left/right bottom:\nmargin(or padding): 10px 20px 10px;\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"dev_tools"}),"Dev Tools"),Object(r.b)("h4",null,"Chrome"),Object(r.b)(o,{mdxType:"Chrome"}),Object(r.b)("h3",null,Object(r.b)("a",{id:"docker"}),"Docker"),Object(r.b)(u,{mdxType:"Docker"}),Object(r.b)("h3",null,Object(r.b)("a",{id:"html5"}),"HTML5"),Object(r.b)("h4",null,"Unicode/Emojis"),Object(r.b)("p",null,"You can get the unicode emoji's from this page: ",Object(r.b)("a",{parentName:"p",href:"http://unicode.org/emoji/charts/full-emoji-list.html"},"emoji list"),".\nAll you have to do is remove the 'U+' from the first part of the code and replace it with '&#x'. End the unicode string with a semicolon.\nFor example, to use the smiley emoji, change it from: U+1F600 to '","&","#x1F600;'.\nTo use a unicode character with the css 'before' or 'after' sudo-selector, remove the 'U+' from and replace it with '\\'. So for the css ':before' or ':after', it would be '\\1F600'. Of course, to use unicode on your site, you have to have the utf8 tag in your site header:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},'<meta charset="utf-8" />\n')),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://www.w3.org/International/tutorials/tutorial-char-enc"},"Reference")),Object(r.b)("h5",null,"Code Pen"),Object(r.b)("p",{"data-height":"265","data-theme-id":"0","data-slug-hash":"vrbzGq","data-default-tab":"html,result","data-user":"joshayoung","data-embed-version":"2","data-pen-title":"UTF8",className:"codepen"},"See the Pen ",Object(r.b)("a",{href:"https://codepen.io/joshayoung/pen/vrbzGq/"},"UTF8")," by Josh Young (",Object(r.b)("a",{href:"https://codepen.io/joshayoung"},"@joshayoung"),") on ",Object(r.b)("a",{href:"https://codepen.io"},"CodePen"),"."),Object(r.b)("h4",null,"HTML5 Doctype"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},"<!DOCTYPE html>\n")),Object(r.b)("h4",null,"Tags"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"<","cite",">"," - cite a source"),Object(r.b)("li",{parentName:"ul"},"<","kdb",">"," - text entered from a keyboard (i.e. ",Object(r.b)("inlineCode",{parentName:"li"},"cd"),", ",Object(r.b)("inlineCode",{parentName:"li"},"pwd"),")"),Object(r.b)("li",{parentName:"ul"},"<","pre",">"," - preserves white space in html output"),Object(r.b)("li",{parentName:"ul"},"<","var",">"," - used for outputting a variable in html"),Object(r.b)("li",{parentName:"ul"},"<","del",">"," - show removed text (sometimes styled with strike-through mark)")),Object(r.b)("h3",null,Object(r.b)("a",{id:"http"}),"HTTP"),Object(r.b)(i,{mdxType:"HTTP"}),Object(r.b)("h3",null,Object(r.b)("a",{id:"ufw"}),"UFW"),Object(r.b)("p",null,"UFW by default will allow all outgoing connections but deny any incoming connections."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Show firewall status/rules:\n  ufw status\n\n  # Enable firewall\n  ufw enable\n")),Object(r.b)("h4",null,"Application Profiles"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Show all application profiles:\n  ufw app list\n\n  # Show which ports/protocols a rule will enable:\n  ufw app info 'OpenSSH'\n")),Object(r.b)("h4",null,"Set default egress/ingress rules"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Deny egress and ingress:\n  ufw default deny outgoing\n  ufw default deny incoming\n")),Object(r.b)("h4",null,"Open Up Ports"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Allow HTTP Service:\n\n  ufw allow http\n\n  # or:\n\n  ufw allow 80/tcp\n  # or allow application profile (nginx, apache, etc):\n  ufw allow 'Nginx HTTP'\n\n  # Allow a specific port:\n  ufw allow 8080/tcp\n\n  # Allow a specific IP:\n  sudo ufw allow from 192.168.3.100\n\n  # Limit to one port:\n  sudo ufw allow from 192.168.3.100 to any port 80\n\n  # Allow the whole subnet:\n  ufw allow from 192.168.3.0/24 to any port 80\n")),Object(r.b)("h4",null,"Close Ports/Delete Rules"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Close port 80\n  ufw deny 80/tcp\n\n  # Deny from specific IP:\n  ufw deny from 192.168.3.100\n\n  # Deny IP and Port:\n  ufw deny from 192.168.3.100 to any port 80\n\n  # Delete HTTP rule:\n  ufw delete allow www\n  # or:\n  ufw delete allow 80/tcp\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"firewalld"}),"Firewalld"),Object(r.b)("p",null,"Firewalld is manipulating iptables behind the scene. Firewalld does have extended features in comparison to just using iptables. In the future iptables will be replaced with nftables. Firewalld will also serve as a font-end for nftables."),Object(r.b)("h4",null,"Default Zones"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"block - ingress rejected, egress allowed"),Object(r.b)("li",{parentName:"ul"},"dmz - for DMZ servers"),Object(r.b)("li",{parentName:"ul"},"drop - ingress dropped, egress allowed"),Object(r.b)("li",{parentName:"ul"},"external - use when you have NAT masquerading"),Object(r.b)("li",{parentName:"ul"},"home - other machines trusted"),Object(r.b)("li",{parentName:"ul"},"internal - use when server is a router/gateway machine"),Object(r.b)("li",{parentName:"ul"},"public - other machines untrusted"),Object(r.b)("li",{parentName:"ul"},"trusted - connections accepted and machines trusted"),Object(r.b)("li",{parentName:"ul"},"work - other machines trusted")),Object(r.b)("h4",null,"Firewalld Main Commands"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Show all zones:\n  firewall-cmd --get-zones\n\n  # Show active zones:\n  firewall-cmd --get-active-zones\n\n  # Show default zone:\n  firewall-cmd --get-default-zone\n\n  # Show all services:\n  firewall-cmd --get-services\n")),Object(r.b)("h4",null,"Change Zones/Interfaces"),Object(r.b)("p",null,"Each network inteface can be assigned to a different zone."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Change 'eth0' to 'work' zone:\n  firewall-cmd --zone=work --change-interface=eth0\n")),Object(r.b)("h4",null,"Show Current Settings"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # List current settings on 'public' zone:\n  sudo firewall-cmd --zone=public --list-all\n\n  # Show open ports:\n  sudo firewall-cmd --zone=public --list-ports\n")),Object(r.b)("h4",null,"Open Ports/Services"),Object(r.b)("p",null,"Without ",Object(r.b)("inlineCode",{parentName:"p"},"--permanent"),", the firewall rule will take affect but will not persist after a reboot."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Open port 80:\n  firewall-cmd --permanent --zone=public --add-port=80/tcp\n\n  # Add FTP Service:\n  firewall-cmd --permanent --zone=public --add-service=ftp\n\n  # Reload the firewall for these to take affect:\n  firewall-cmd --reload\n")),Object(r.b)("h4",null,"Remove Service/Port"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Remove the open port:\n  firewall-cmd --zone=public --remove-port=80/tcp\n\n  # Remove the service:\n  firewall-cmd --zone=public --remove-service=ftp\n\n  # Add the '--permanent' flag to make the removal permanent:\n  firewall-cmd --zone=public --remove-port=80/tcp --permanent\n  firewall-cmd --zone=public --remove-service=ftp --permanent\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"gatsby"}),"Gatsby"),Object(r.b)("h4",null,"Starting Local Server"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  gatsby develop\n  # or\n  npm run develop\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"java"}),"Java"),Object(r.b)("h4",null,"Build a Jar:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"  mvn package\n  java -jar target/my_jar_name.jar\n")),Object(r.b)("h4",null,"Interface Naming"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"When you have more than one interface use a name that corresponds to the domain."),Object(r.b)("li",{parentName:"ul"},'When you have only one interface, name the interface "name" + "Impl".')),Object(r.b)("h3",null,Object(r.b)("a",{id:"git"}),"Git"),Object(r.b)("h4",null,"Contributing to an open source project"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Fork the project on github."),Object(r.b)("li",{parentName:"ol"},"Create a feature branch: ",Object(r.b)("inlineCode",{parentName:"li"},'git checkout -b "feature-branch-name"'),"."),Object(r.b)("li",{parentName:"ol"},"Commit changes to your feature branch: ",Object(r.b)("inlineCode",{parentName:"li"},'git commit -am "commit message"'),"."),Object(r.b)("li",{parentName:"ol"},"Push the feature branch up: ",Object(r.b)("inlineCode",{parentName:"li"},"git push origin feature-branch-name"),"."),Object(r.b)("li",{parentName:"ol"},"Creating a PR from this branch will open up a PR in the forked repo.")),Object(r.b)("h4",null,"Pull Down / Commit to a Remote PR:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Copy the remote branch name in the PR list (i.e. 'thebrnm:master')")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Remove the ",Object(r.b)("inlineCode",{parentName:"li"},":master")," off the end.")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"git remote add thebrnm git@github.com:thebrnm/the_repo.git"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"In this case 'origin' started as: ",Object(r.b)("inlineCode",{parentName:"li"},"git@github.com:thebrnm/the_repo.git"))),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"git fetch thebrnm")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"git checkout -b thebrnm-master thebrnm/master")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},'git commit -am "My Commit Message"')),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"git push thebrnm HEAD:master"))),Object(r.b)("h4",null,"Remove File from Repo, and File System"),Object(r.b)("p",null,"This will remove the file from your repo, and the filesystem."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rm file_name\n")),Object(r.b)("h4",null,"Push up tags:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"}," git push --follow-tags\n")),Object(r.b)("h4",null,"Remove File from Repo, not File System"),Object(r.b)("p",null,"This will remove the file from your repo, but not from the file system."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rm --cached file_name\n")),Object(r.b)("h4",null,"Remove Folder from Repo, and File System"),Object(r.b)("p",null,"This will remove the directory from your repo, and the filesystem."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rm -rvf file_name\n")),Object(r.b)("h4",null,"Remove Folder from Repo, not File System"),Object(r.b)("p",null,"This will remove the directory from your repo, but not from the file system."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rm -r --cached my_folder_name\n")),Object(r.b)("h4",null,"Show Contents of Commit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git show [commit hash]\n")),Object(r.b)("h4",null,"Change Base Branch"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rebase --onto new_branch old_branch branch_you_are_moving\n")),Object(r.b)("h4",null,"Turn off the pager"),Object(r.b)("p",null,"Add ",Object(r.b)("inlineCode",{parentName:"p"},"--no-pager")," to a command"),Object(r.b)("h4",null,"Restore a Deleted File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout [removed commit]^ -— [path to flle]\n")),Object(r.b)("h4",null,"Delete Branches"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Delete a local branch:\n  git branch -d my_local_branch\n\n  # Delete a remote branch:\n  git push origin --delete my_remote_branch\n")),Object(r.b)("h4",null,"Show which Remote Branch"),Object(r.b)("p",null,"This shows which remote branch you are tracking and how far behind your local version is from the remote."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git branch -vv\n")),Object(r.b)("h4",null,"Push changes, then revert locally"),Object(r.b)("p",null,"This will allow you to push up a feature branch and then revert your local changes to see the diff."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git push origin my_feature_branch\n\n  # Revert changes so you can see the diff (locally):\n  git reset HEAD~\n")),Object(r.b)("h4",null,"HEAD"),Object(r.b)("p",null,"HEAD is the most recent commit on your present branch."),Object(r.b)("h4",null,"Checkout Previous Commit"),Object(r.b)("p",null,"This will put you in a detached HEAD state."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout [hash of previous commit]\n")),Object(r.b)("h4",null,"Checkout Remote Branch"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git fetch origin\n  git checkout -b my_branch_name orgin/my_branch_name\n\n  # or:\n\n  git fetch\n  git checkout my_branch_name\n\n  # if we have local branch with same name do\n  # this to prevent conflicts with the local branch:\n\n  git fetch origin\n  git checkout --track origin/my_branch_name\n")),Object(r.b)("h4",null,"Git Reset"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git reset --soft HEAD^3\n\n  \"'mixed' is the default if you run `git reset`:\n  git reset --mixed HEAD^3\n\n  git reset --hard HEAD^3\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"--soft (keeps staged changes)"),Object(r.b)("li",{parentName:"ul"},"--mixed (changes present, not staged)"),Object(r.b)("li",{parentName:"ul"},"--hard (does not preserve uncommitted changes)")),Object(r.b)("h4",null,"Edit Commit Message"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git commit --amend\n")),Object(r.b)("h4",null,"Revert a file to state at previous commit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout -- my_file.txt\n")),Object(r.b)("h4",null,"Commit Messages"),Object(r.b)("p",null,'Try to use present tense for your commit message (i.e. "',Object(r.b)("strong",{parentName:"p"},"Add"),' new class for students" not: "Added new class for students")'),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  git commit -m "Correct site map"\n')),Object(r.b)("h4",null,"Pick Files to Stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash -p\n")),Object(r.b)("h4",null,"Show File in Stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash show stash@{0}\n")),Object(r.b)("h4",null,"Checkout a file that is stashed"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout stash@{0} -- path/to/file\n")),Object(r.b)("h4",null,"Revert Uncommitted Changes"),Object(r.b)("p",null,"Leaving out the `stash@{2} variable below will run the stash command on top stash on the stack."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash apply stash@{1}\n  git stash drop stash@{2}\n")),Object(r.b)("h4",null,"Retrieve a stashed file"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout [name of stash] -- [filename]\n")),Object(r.b)("h4",null,"Stash all files (including files in .gitignore)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash --all\n")),Object(r.b)("h4",null,"Stash tracked and untracked files"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash save --include-untracked\n")),Object(r.b)("h4",null,"Revert One File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout -- path/to/file.txt\n")),Object(r.b)("h4",null,"Show Files in Commit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git diff-tree --no-commit-id --name-only -r [commit hash]\n")),Object(r.b)("h4",null,"Show Diff in Staged Files"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git diff --staged\n")),Object(r.b)("h4",null,"Rename a Local Branch"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git branch -m &lt;oldname&gt; &lt;newname&gt;\n")),Object(r.b)("h4",null,"Move Remote PR Branch Locally"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git fetch origin pull/ID/head:BRANCHNAME\n")),Object(r.b)("h4",null,"Saves Current Changes with Stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  git stash\n  or:\n  git stash save "Name for the stash"\n')),Object(r.b)("h4",null,"Files in stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash list --stat\n")),Object(r.b)("h4",null,"Show files in stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash show stash@{2}\n")),Object(r.b)("h4",null,"Remove all stashes"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash clear\n")),Object(r.b)("h4",null,"Restores Most Recently Stashed Changes"),Object(r.b)("p",null,"This command will run ",Object(r.b)("inlineCode",{parentName:"p"},"git stash apply")," and then ",Object(r.b)("inlineCode",{parentName:"p"},"git stash drop"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash pop\n")),Object(r.b)("h4",null,"List Stashes"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash list\n")),Object(r.b)("h4",null,"Restore Specific Stash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git stash pop stash@{3}\n")),Object(r.b)("h4",null,"Create and switch to branch"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git checkout -b new_branch_name\n")),Object(r.b)("h4",null,"Show Remote Branches"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git branch -r\n")),Object(r.b)("h4",null,"Delete local branch"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git branch -d local_branch_name\n")),Object(r.b)("h4",null,"Git Tags"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # show all tags\n  git tag\n  # checks out the code with this tag\n  git checkout [name of tag]\n  # adds a tag\n  git tag -a [tag name] -m tag description]\n  # pushes tags\n  git push --tags\n")),Object(r.b)("h4",null,"Show Diffs"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git diff HEAD^ (parent)\n  git diff HEAD^^ (grandparent)\n  git diff HEAD~6 (six commits ago)\n")),Object(r.b)("h4",null,"Compare Commits"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git diff HEAD^..HEAD\n  git diff 58786f..98f7f0\n  git diff master another_branch\n")),Object(r.b)("h4",null,"Stop tracking in Repo"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rm --cached errors.txt\n")),Object(r.b)("h4",null,"Remove one file from ",Object(r.b)("inlineCode",{parentName:"h4"},"git add")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git reset HEAD &lt;file&gt;\n")),Object(r.b)("h4",null,"Remove files added with ",Object(r.b)("inlineCode",{parentName:"h4"},"git add .")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git reset\n")),Object(r.b)("h4",null,"Restore a deleted file"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # First find the hash:\n  git reflog\n  git log --walk-reflogs (more detail)\n\n  # Then:\n  git reset --hard 7980f\n  # or:\n  git reset --hard HEAD@{1}\n\n  # Create a new branch with reflog hash:\n  git branch [new branch name] 890fs4\n  or:\n  git branch [new branch name] HEAD@{1}\n")),Object(r.b)("h4",null,"Clone a local repo as a backup"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git clone local_repo local_repo_backup\n")),Object(r.b)("h4",null,"Rewrite History"),Object(r.b)("p",null,"Once a file is added to git (after the commit) it is permanently in the repo. The only way to remove it is to rewrite history. However, do this with extreme care! Make a backup of your code first with ",Object(r.b)("inlineCode",{parentName:"p"},"clone"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git filter-branch --tree-filter 'rm -f old_file.sh -- --all'\n\n  # or you can just remove the file from the repo:\n  git filter-branch --index-filter 'git rm --cached --ignore-unmatch old_file.sh'\n\n  # Sometimes when you re-write you will get empty commits, to delete these do:\n  git filter-branch -f --prune-empty -- --all\n")),Object(r.b)("h4",null,"Commit Order Differences"),Object(r.b)("p",null,"Order from top to bottom:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git log (newest to oldest)\n  git rebase -i HEAD~3 (oldest to newest)\n")),Object(r.b)("h4",null,"Roll back previous commit (preserving file changes)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git reset --soft HEAD~1\n  or\n  git reset --soft HEAD^\n")),Object(r.b)("h4",null,"Cherry Pick"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  git cherry-pick 97589f\n\n  # Edit Commit:\n  git cherry-pick --edit 987df0\n\n  # Combine two commits:\n  git cherry-pick --no-commit 9876f 78979f\n  git commit -m "Combine two commits"\n')),Object(r.b)("h4",null,"Add file to last commit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  git add newfile.sh\n  git commit --amend -m "Add file to repo"\n  or:\n  git commit --amend --no-edit\n')),Object(r.b)("h4",null,"Roll back previous commit (discarding file changes)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git reset --hard HEAD~1\n  # or:\n  git reset --hard HEAD^\n  # or the two previous  commits:\n  git reset --hard HEAD^^\n")),Object(r.b)("h4",null,"Add Remote"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git push -u origin master\n  git push -u [the name] [the branch]\n  # After using '-u', you can use use `git push` next time:\n  git push\n")),Object(r.b)("h4",null,"Revert a Commit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git revert [the commit hash you want to revert]\n")),Object(r.b)("h4",null,"How Git Pull Works"),Object(r.b)("p",null,"When you run ",Object(r.b)("inlineCode",{parentName:"p"},"git pull"),", you are actually performing a series of commands:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Updates the local origin/master branch by fetching updates from the origin with: ",Object(r.b)("inlineCode",{parentName:"li"},"git fetch"),"."),Object(r.b)("li",{parentName:"ul"},"Then the newly updated local origin/master is merged into the local master with: ",Object(r.b)("inlineCode",{parentName:"li"},"git merge origin/master"),".")),Object(r.b)("p",null,"Therefore, just running a ",Object(r.b)("inlineCode",{parentName:"p"},"git fetch")," will pull down all of the updated code from the origin, but it will not merge any of this with the local master."),Object(r.b)("h4",null,"Rebase (run from feature branch)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rebase master\n")),Object(r.b)("h4",null,"Interactive Rebase (the last 4 commits)"),Object(r.b)("p",null,"Using 'squash' will combine this commit in with the previous commit."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  git rebase -i HEAD~4\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"github"}),"GitHub"),Object(r.b)("h4",null,"Close an Issue With a Commit"),Object(r.b)("p",null,"You can add a number to your commit message to close that particular commit. I have included an example commit below."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"Addressing the problems with the latency. Closes #4.\n")),Object(r.b)("h3",null,Object(r.b)("a",{id:"javascript"}),"JavaScript"),Object(r.b)("h4",null,"Capitalize Function"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"var cap = function(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n")),Object(r.b)("h4",null,"Destructuring"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},'// Object Destructuring:\nlet foods = {\n  vegetable: "spinach",\n  fruit: "apple",\n  nut: "almond",\n};\nconst { vegetable, fruit } = foods;\n\n// Array Destructuring:\nlet dirty_dozen = [\n  "Strawberries",\n  "Spinach",\n  "Nectarines",\n  "Apples",\n  "Peaches",\n  "Pears",\n  "Cherries",\n  "Grapes",\n  "Celery",\n  "Tomatoes",\n  "Sweet bell peppers",\n  "Potatoes",\n];\n\nconst [one_item] = dirty_dozen;\n')),Object(r.b)("h4",null,"Only display content when JavaScript is enabled"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},'document.getElementsByTagName("body")[0].className += " js";\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* Only set when JavaScript is enabled in browser: */\nbody.js .only-js {\n  border: 1px solid #a0a0a0;\n  display: block;\n  ...;\n}\n")),Object(r.b)("h4",null,"ES2015 Function Syntax"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},'const output_log = () => {\n  alert("This is an example.");\n};\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"const add_nums = (x, y) => {\n  return x + y;\n};\n")),Object(r.b)("h4",null,"Detect Keyboard Input"),Object(r.b)("p",{"data-height":"265","data-theme-id":"dark","data-slug-hash":"vZjKVr","data-default-tab":"css,result","data-user":"joshayoung","data-embed-version":"2","data-pen-title":"Detect Keyboard Input",className:"codepen"},"See the Pen ",Object(r.b)("a",{href:"https://codepen.io/joshayoung/pen/vZjKVr/"},"Detect Keyboard Input")," by Josh (",Object(r.b)("a",{href:"https://codepen.io/joshayoung"},"@joshayoung"),") on ",Object(r.b)("a",{href:"https://codepen.io"},"CodePen"),"."),Object(r.b)("h4",null,"Basic Class Structure"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"  var Shape = function(sides) {\n    this.sides = sides;\n  }\n\n  Shape.prototype.area = function() {\n    calculate ...\n  }\n\n  var square = new Shape(4);\n")),Object(r.b)("h4",null,"Immediately Invoked Function Expression (IIFE)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"  (function() {\n  ...executed immediately\n  })();\n")),Object(r.b)("h4",null,"String Object vs Literal"),Object(r.b)("p",null,"A string literal is immutable."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"// String Object:\ntypeof new String(); // 'object'\nvar str = new String(\"Hello\");\nstr.x = \"World\";\nconsole.log(str.x); // Outputs 'World'\n\n// String Literal:\ntypeof \"\"; // 'string'\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"laravel"}),"Laravel"),Object(r.b)("h4",null,"Basic Migration"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan make:migration the_users_table --create=users\n")),Object(r.b)("h4",null,"Refresh Auto Load Files"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  composer dump-autoload\n")),Object(r.b)("h4",null,"Run the Migrations"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan migrate\n\n")),Object(r.b)("h4",null,"Open Laravel Shell"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan tinker\n")),Object(r.b)("h4",null,"Create the Model along with the Migration"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan make:model User -m\n")),Object(r.b)("h4",null,"Create Controller"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan make:controller UserController\n")),Object(r.b)("h4",null,"Create Model, Controller, and Migration"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan make:model User -mc\n")),Object(r.b)("h4",null,"Create Resoureful Controller"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  php artisan make:controller UsersController -r\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"freebsd"}),"FreeBSD"),Object(r.b)("h4",null,"Troubleshooting ZPool Drive Errors"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  zpool status\n  glabel status\n  camcontrol devlist\n  geom disk list\n\n  # Grep for info on the drive in question:\n  dmesg | grep ^da1 | less\n\n  # Find the serial on the drive in question:\n  camcontrol identify da1 | grep serial\n")),Object(r.b)("h4",null,"Edit Hostname"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Edit:\n  vi /etc/rc.conf\n\n  # Rename references to old hostname:\n  vi /etc/hosts\n\n  # Set the hostname\n  hostname your-new-hostname\n\n  reboot\n")),Object(r.b)("h4",null,"Shutdown Server"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  poweroff\n  # or\n  shutdown -p now\n")),Object(r.b)("h4",null,"Show Version"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  freebsd-version\n")),Object(r.b)("h4",null,"Update OS"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  freebsd-update fetch\n  freebsd-update install\n")),Object(r.b)("h4",null,"Ports"),Object(r.b)("p",null,"Ports are groups of 'make' files that allow software to be installed from source. They can be managed by 'portsnap'."),Object(r.b)("h4",null,"Packages"),Object(r.b)("p",null,"These packages are pre-compiled. They are similar to .deb or .rpm packages on Debian and RHEL respectively."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Package Info:\n  pkg info\n\n  # Install package:\n  pkg install package_name\n\n  # Update:\n  pkg update\n\n  # Upgrade:\n  pkg upgrade\n\n  # Uninstall package:\n  pkg remove package_name\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"slackware"}),"Slackware"),Object(r.b)("h4",null,"Slackware Linux Commands"),Object(r.b)("p",null,"Use slackpkg to keep system updated."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Download slackpkg .tar.gz file with wget\n  wget https://slackpkg.org/stable/slackpkg-2.60-noarch-1.tgz\n\n  # Install slackpkg with 'installpkg'\n  installpkg slackpkg-2.60-noarch-1.tgz\n\n  # Uncomment and select a mirror:\n  vi /etc/slackpkg/mirrors\n\n  # Initialize slackpkg:\n  slackpkg update\n\n  # Install package\n  slackpkg install package_name\n\n  # Update to the latest slackpkg packages:\n  slackpkg update\n  slackpkg upgrade-all\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"ubuntu-debian"}),"Ubuntu / Debian"),Object(r.b)("p",null,"Add or edit the lines below in this file ",Object(r.b)("inlineCode",{parentName:"p"},"/etc/network/interfaces"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ...\n  auto eth0\n  iface eth0 inet static\n  address 192.168.3.100\n  netmask 255.255.255.0\n  gateway 192.168.3.1\n  broadcast 192.168.3.255\n  dns-nameservers 192.168.3.1\n  ...\n")),Object(r.b)("h4",null,"Show Ubuntu Version"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  lsb_release -a\n  # or:\n  cat /etc/*release\n  # or:\n  cat /etc/os-release\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"centos-rhel"}),"CentOS / RHEL"),Object(r.b)("h4",null,"Change Hostname"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  hostnamectl set-hostname my-new-hostname\n")),Object(r.b)("h4",null,"Show Version"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  cat /etc/*release\n")),Object(r.b)("h4",null,"Add Static IP"),Object(r.b)("p",null,"Add modify the entries below within: ",Object(r.b)("inlineCode",{parentName:"p"},"/etc/sysconfig/network-scripts/ifcfg-eth0")," (change IP addresses according to your network). The name for your network connection could differ from ",Object(r.b)("inlineCode",{parentName:"p"},"ifcfg-eth0"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  ...\n  DEVICE="eth0"\n  BOOTPROTO="static"\n  IPADDR="192.168.3.100"\n  NETMASK="255.255.255.0"\n  GATEWAY="192.168.3.1"\n  DNS1="192.168.3.1"\n  DNS2="192.168.3.2"\n  ONBOOT="yes"\n  ...\n')),Object(r.b)("h3",null,Object(r.b)("a",{name:"arch"}),"ARCH"),Object(r.b)("h4",null,"Pacman Commands"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Sync and Update:\n  pacman -Syu\n\n  # Install a package:\n  pacman -S package_name\n\n  # Remove a package:\n  pacman -R package_name\n")),Object(r.b)("h4",null,"Show Version"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  lsb_release -a\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"linux"}),"Linux"),Object(r.b)("h4",null,"Init Systems"),Object(r.b)("h5",null,"SystemD"),Object(r.b)("p",null,"Systemd is managed my 'systemctl'. To start sshd, we would run: ",Object(r.b)("inlineCode",{parentName:"p"},"systemctl start sshd"),"."),Object(r.b)("h5",null,"Upstart"),Object(r.b)("p",null,"Upstart is managed by 'initctl'. To start sshd we would run: ",Object(r.b)("inlineCode",{parentName:"p"},"initctl start sshd"),". Upstart was invented as a replace for System V by Ubuntu."),Object(r.b)("h5",null,"System V (SysV)"),Object(r.b)("p",null,"To start sshd, we would run: '/etc/init.d/ssh start'. This was primarily used by older versions of Linux."),Object(r.b)("h5",null,"BSD Init"),Object(r.b)("p",null,"The BSD based init system is configured under /etc/rc.conf. To start sshd, we would run: '/etc/rc.d/sshd start'. BSD and Slackware use the BSD init system"),Object(r.b)("h4",null,"Linux partition/format with Parted"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  parted /dev/sdb # Open device with gparted:\n  print # Print device info:\n  print free # Show free space\n  help mklabel # Print available label types:\n  mklabel msdos # 'msdos' good option, select 'gpt' for uefi support\n  help mkpart # Partitioning help:\n  mkpart # Start partitioning:\n\n # You will usually select 'primary' for the partition type.\n\n # Select filesystem type, examples:\n # ext2, ext3, ext4, ntfs, exfat, fat32\n\n # Start/End need adjustment if not partitioning whole drive:\n # Start partition from '2048s'\n # End on '-1s'\n\n  quit # Exit:\n\n  # Format your partition with 'mkfs', examples:\n  mkfs.ext2 /dev/sdb1\n  mkfs.ext3 /dev/sdb1\n  mkfs.ext4 /dev/sdb1\n  mkfs.vfat /dev/sdb1\n  mkfs.ntfs /dev/sdb1\n\n  # Use '-L' to add a label:\n  mkfs.ext4 -L mydrive /dev/sdb1\n\n  eject /dev/sdb1 # Eject partition:\n")),Object(r.b)("h4",null,"Show Directory Size"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  du -sh directory_path\n")),Object(r.b)("h4",null,"32 or 64 Bit OS:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  uname -m\n  # or\n  arch\n")),Object(r.b)("h4",null,"Print Services Running on Port:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  lsof -i tcp:8000\n")),Object(r.b)("h4",null,"SystemD"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # 'enable' will create a symbolic link so that the service starts on reboot\n  # 'disable' will remove the symbolic link\n  # 'is-active' will tell you if the service is running\n  # 'is-enable' will tell you if it starts on boot\n  systemctl [status, enable, disable, is-active, is-enabled start, restart, reload, stop] application.service\n")),Object(r.b)("h4",null,"Scan a Folder for Viruses (ubuntu)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  sudo apt-get update\n  sudo apt-get install clamav clamav-daemon\n\n  # If you get an error here, it might be because freshclam is already running in the background:\n  # This command will update the virus signatures:\n  sudo freshclam\n\n  # Scan a directory:\n  clamscan -r —bell -i /path/to/directory\n")),Object(r.b)("h4",null,"Change Username"),Object(r.b)("p",null,"If you want to switch user 'joe' to 'sally', below are the steps:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  usermod -l sally joe\n\n  # Verify that the new user exists and the old one does not:\n  id sally\n  id joe\n\n  # Swap out the new user's group:\n  groupmod -n sally joe\n\n  # Swap the home directory:\n  usermod -d /home/sally -m sally\n\n  # If the above command does not work, delete the old dir and re-create it:\n  rm -rvf /home/joe\n  mkhomedir_helper sally\n\n  # If you search these two files, you should not see the 'joe' user/group:\n  cat /etc/group | grep joe\n  cat /etc/passwd | grep joe\n")),Object(r.b)("h4",null,"Rsync"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rsync -avz --delete /original/folder/location /new/folder/location\n")),Object(r.b)("h4",null,"Reload Bash Config"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  source .bashrc\n")),Object(r.b)("h4",null,"Check Drive for Errors"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # Health Summary:\n  smartctl -H /dev/sdb\n  # Time required to run HDD Test:\n  smartctl -c /dev/sdb\n\n  # Run Short Test:\n  smartctl -t short /dev/sdb\n\n  # Run Long Test:\n  smartctl -t long /dev/sdb\n\n  # Print Test Results Summary:\n  smartctl -l selftest /dev/sdb\n\n  # Print Details of Latest Test:\n  smartctl -a /dev/sdb\n")),Object(r.b)("h4",null,"Check Drive for Bad Blocks"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  # Test for bad block:\n  badblocks -vs /dev/sdb > badblocks_results.txt\n\n  # Command with different options:\n  badblocks -sw -t random /dev/sdb > badblocks_results.txt\n\n  # If you get an error like: "Value too large for defined data type invalid end block ... must be 32-bit value"\n  badblocks -sw -t random -b 4096 /dev/sdb > badblocks_results.txt\n')),Object(r.b)("h4",null,"Correct Bad Blocks"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # ext(2/3/4) filesystem:\n  e2fsck -l badblocks_results.txt /dev/sdb\n\n  # other filesystems:\n  fsck -l badblocks_results.txt /dev/sdb\n")),Object(r.b)("h4",null,"Show Security Settings with ",Object(r.b)("inlineCode",{parentName:"h4"},"ls")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ls -Z\n")),Object(r.b)("h4",null,"Crontab"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  *  *  *  *  *         command\n  -  -  -  -  -\n  |  |  |  |  |\n  |  |  |  |  +---------------------- day of week (0 - 6) (0 - Sunday)\n  |  |  |  +--------------------- month (1 - 12)\n  |  |  +------------------- day of month (1 - 31)\n  |  +------------- hour (0 - 23)\n  +------------ minute (0 - 59)\n")),Object(r.b)("h4",null,"Write ISO/IMG to Disk or USB"),Object(r.b)("p",null,"The command below could also be executed with 'bs=4M'."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  sudo fdisk -l\n  sudo umount /dev/sdb\n  sudo dd if=/path/to/iso/or/img of=/dev/sdb bs=1M status=progress && sync\n  sudo eject /dev/sdb\n")),Object(r.b)("h4",null,"Find Linux Version"),Object(r.b)("h5",null,"Kernel:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  uname -mrs\n")),Object(r.b)("h5",null,"Distribution:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  cat /etc/*-release\n")),Object(r.b)("h4",null,"Prevent Command from Being Recorded in Terminal History"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  <space> command\n")),Object(r.b)("h4",null,"Logged In User History (last 10)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  last -10\n")),Object(r.b)("h4",null,"Wipe HDD with 'dd' Command"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  # With Zeros:\n  dd if=/dev/zero of=/dev/sdb bs=1M status=progress && sync\n\n  # With Random Data:\n  dd if=/dev/urandom of=/dev/sdb bs=1M status=progress && sync\n")),Object(r.b)("h4",null,"Terminal Calculator"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  bc -l\n")),Object(r.b)("h4",null,"System Uptime"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  uptime\n")),Object(r.b)("h4",null,"Clear Terminal"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  CTRL + l\n")),Object(r.b)("h4",null,"Extract a .tar File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  tar -xvf file.tar\n")),Object(r.b)("h4",null,"Extract a .tar.gz File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  tar -xzvf file.tar.gz\n")),Object(r.b)("h4",null,"Extract a .tar.bz2 File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  tar -xjvf file.tar.bz2\n")),Object(r.b)("h4",null,"Finding a File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  find / -name [file name you are searching] 2> /dev/null\n")),Object(r.b)("h4",null,"Bring Job Into the Foreground"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  fg\n")),Object(r.b)("h4",null,"Pause Job"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  Ctrl + Z\n")),Object(r.b)("h4",null,"Resume Paused Job in Background"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  bg\n")),Object(r.b)("h4",null,"Continue Execution after Shell Exit"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  nohup ./script.sh &\n")),Object(r.b)("h4",null,"List Background Jobs"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  jobs\n")),Object(r.b)("h4",null,"Start Program in Background"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ./script.sh &\n")),Object(r.b)("h4",null,"Direct All Output to Log File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ./script.sh 1> ~/tmp/log.txt 2> ~/tmp/log.txt &\n")),Object(r.b)("h4",null,"Direct All Output to Null"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ./script.sh 1> /dev/null 2> /dev/null &\n")),Object(r.b)("h4",null,"Run 256 Checksum"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  sha256sum /the/path/to/file.iso\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"mac"}),"Mac"),Object(r.b)("h4",null,"Run 256 Checksum"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  shasum -a 256 /the/path/to/file.iso\n")),Object(r.b)("h4",null,"Change Time Machine Backup Frequency"),Object(r.b)("p",null,"The interval is set in seconds."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  defaults write /System/Library/Launch Daemons/com.apple.backupd-auto StartInterval -int 1800\n")),Object(r.b)("h4",null,"Find IP"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  ifconfig |  grep -oE "\\w* \\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b"\n')),Object(r.b)("h4",null,"Flush DNS"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  killall -HUP mDNSResponder\n")),Object(r.b)("h4",null,"Write ISO/IMG to Disk or USB"),Object(r.b)("p",null,"The command below could also be executed with 'bs=4m'."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  diskutil list\n  umount /dev/disk2\n  dd if=/path/to/iso/or/img/file of=/dev/disk2 bs=1m && sync\n  diskutil eject /dev/disk2\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"node"}),"Node"),Object(r.b)("h4",null,"NPM Packages Installed Globally:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  npm list -g --depth 0\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"react"}),"React"),Object(r.b)("h4",null,"Debugging data:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"<pre>{JSON.stringify(resource)}</pre>\n")),Object(r.b)("h4",null,"Commenting out JSX:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"{\n  /* <ReactComponent></ReactComponent> */\n}\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"mysql"}),"MySQL"),Object(r.b)("h4",null,"Connect to Database"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  mysql -u [username] -p [password] -h [hostname]\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"netstat"}),"Netstat"),Object(r.b)("h4",null,"Find Listening Port (Bash)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  netstat -nao | find "80"\n')),Object(r.b)("h4",null,"Find Listening Port (Windows)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  netstat -nao | findstr "0.0.80"\n')),Object(r.b)("h3",null,Object(r.b)("a",{name:"mysql"}),"MySQL"),Object(r.b)("h4",null,"Connect to Database"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  mysql -u [username] -p [password] -h [hostname]\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"psql"}),"PostgreSQL"),Object(r.b)(p,{mdxType:"Postgresql"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"kanban"}),"Kanban"),Object(r.b)(j,{mdxType:"Kanban"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"python"}),"Python"),Object(r.b)("h4",null,"Start Simple Server"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  python -m SimpleHTTPServer\n")),Object(r.b)("h4",null,"Start Simple Server with Python 3"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  python -m http.server\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"rails"}),"Rails"),Object(r.b)("h4",null,"Set to Production Mode Locally:"),Object(r.b)("p",null,"If you are using 'dotenv-rails' to add ENV data, you may need to move that outside of your development/test section in your Gemfile."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  bin/rails assets:precompile\n\n  bin/rails s -b 0.0.0.0 -e production\n")),Object(r.b)("h4",null,"Connect to Already Running Rails Instance:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails server -P /app/tmp/pids/server.pid\n")),Object(r.b)("h4",null,"Update Gems:"),Object(r.b)("p",null,"Updating gems that are in your lock file, but not in your Gemfile can be updated with ",Object(r.b)("inlineCode",{parentName:"p"},"bundle update [gem name]"),". The gem can be upgraded to the next patch version with ",Object(r.b)("inlineCode",{parentName:"p"},"bundle update [gem name] --patch"),"."),Object(r.b)("p",null,"Use ",Object(r.b)("inlineCode",{parentName:"p"},"bundle update --help")," for more info."),Object(r.b)("h4",null,"Start server on a different port:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails s -e development -p 2000\n")),Object(r.b)("h4",null,"Start server on a different port with another pid file:"),Object(r.b)("p",null,"Sometimes when you are running a server on a different port, you will get an error having to do with the pid file (I forgot exactly what it says). Running a command such as the below will allow you to write to a different pid file."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails s -e development -p 2000 -P tmp/pids/srv2.pid\n")),Object(r.b)("h4",null,"Start rails listening on your local IP address"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails s -b 0.0.0.0\n")),Object(r.b)("h4",null,"Inheriting Directly from ActionController::Base"),Object(r.b)("p",null,'Inheriting directly from: "ActionController::Base" instead of: "ApplicationController" will circumvent any code in your application_controller.rb file. Essentially it is like "skip running anything in the application_controller.rb file". "ApplicationController" inherits from "ActionController::Base".'),Object(r.b)("h4",null,"Output image path from console"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ActionController::Base. \\\n  helpers.asset_path('image.jpg')\n\n  # Or:\n  include ActionView::Helpers::AssetUrlHelper\n  asset_path('image.jpg')\n")),Object(r.b)("h4",null,"Open Rails Database Console"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails dbconsole\n")),Object(r.b)("h4",null,"Clear Test Log File"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails log:clear LOGS=test\n")),Object(r.b)("h4",null,"Rails Controller Methods Are Typically Ordered"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"index"),Object(r.b)("li",{parentName:"ol"},"show"),Object(r.b)("li",{parentName:"ol"},"new"),Object(r.b)("li",{parentName:"ol"},"edit"),Object(r.b)("li",{parentName:"ol"},"create"),Object(r.b)("li",{parentName:"ol"},"update"),Object(r.b)("li",{parentName:"ol"},"destroy")),Object(r.b)("h4",null,"Rollback in Steps"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails db:rollback STEP=1\n")),Object(r.b)("h4",null,"Show Migration Status"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails db:migrate:status\n")),Object(r.b)("h4",null,"Run Migrations on Test Database"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  bin/rails db:migrate RAILS_ENV=test\n")),Object(r.b)("h4",null,"Rails CRUD forms with no form plugin"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://github.com/joshayoung/rails-basic-forms"},"github.com/joshayoung/rails-basic-forms")),Object(r.b)("h4",null,"Start Local Server"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails server (rails s)\n")),Object(r.b)("h4",null,"Start Local Server on any IP"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails s -b 0.0.0.0\n")),Object(r.b)("h4",null,"Start Local Server on different port"),Object(r.b)("p",null,"The default port is 3000 if unspecified."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails s -b 0.0.0.0 -P tmp/pids/srv1.pid\n  rails s -b 0.0.0.0 -p 3001 -P tmp/pids/srv2.pid\n  rails s -b 0.0.0.0 -p 3002 -P tmp/pids/srv3.pid\n")),Object(r.b)("h4",null,"Active Record Errors"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Model validations:\n  class Student\n    validates :name, :grade, :act_score, presence: true\n    ...\n  end\n\nnew_student = Student.create(name: 'James', grade: '2nd.')\n\n  # Show errors:\n  new_student.errors\n\n  # Show errors as sentences:\n  new_student.errors.full_messages\n")),Object(r.b)("h4",null,"Route Syntax"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  verb "the_url" => "controller#action"\n  get "tickets" => "tickets#index"\n  get "tickets/:id" => "tickets#show"\n')),Object(r.b)("h4",null,"Open SQLite from Rails"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails dbconsole\n")),Object(r.b)("h4",null,"Show Rail Project Info"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails about\n")),Object(r.b)("h4",null,"Open Rails Console"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails console\n  or:\n  rails c\n\n  # reload the console to pull in any code changes made:\n  reload!\n")),Object(r.b)("h4",null,"Rails Tasks"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails -T (commands than can be run)\n  rails -T db (database related commands that can be run)\n")),Object(r.b)("h4",null,"Create Migration"),Object(r.b)("p",null,"Older versions of rails used the 'rake' command instead of 'rails' below."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  rails g migration [migration name] field:type field:type...\n\n  rails db:migrate\n\n  rails db:status\n\n  rails db:rollback (rolls back the previous migration)\n\n  rails db:migrate VERSION=XXX (rolls back to this migration)\n")),Object(r.b)("h4",null,"Add More Columns"),Object(r.b)("p",null,"Using this convention, rails will know that you want to add the fields listed to the table defined by 'YYY' or 'yyy' below."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails g migration AddXXXToYYY ...\n  rails g migration AddFieldsToTownships title:string moved_to:date\n\n  rails g migration add_xxx_to_yyy\n  rails g migration add_fields_to_townships\n")),Object(r.b)("h4",null,"Show Rails Generators"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails g\n")),Object(r.b)("h4",null,"Create Scaffolding"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails generate scaffold [name] attribute:type\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails generate scaffold Product title:string price:decimal\n")),Object(r.b)("h4",null,"Create Model (includes migration)"),Object(r.b)("p",null,"Model names should be singular."),Object(r.b)("p",null,"String is the default type, so that can be left off if the type is a string."),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"http://api.rubyonrails.org/v5.2.0/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column"},"Column Types")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails generate model [model name] [field[:type][:index] field[:type][:index]] [options]\n\n  # or:\n\n  rails g model [model name] [field[:type][:index] field[:type][:index]] [options]\n\n  # i.e.\n  rails g model ticket title:string priority:string the_date:datetime\n\n  # Run Migration:\n  rails db:migrate\n\n  # Migration Status:\n  rails db:migrate:status\n")),Object(r.b)("p",null,"Example: A model named 'Student' would point to a table named 'students' by default."),Object(r.b)("h4",null,"Create Controller and View"),Object(r.b)("p",null,"Controller name is plural."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails generate controller [controller name]\n  or:\n  rails g controller [controller name]\n")),Object(r.b)("h4",null,"Remove Controller and other files created above."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails destroy controller [controller name]\n")),Object(r.b)("h4",null,"Basic Controller Methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class TicketsController < ApplicationController\n  def index; end\n  def create; end\n  def show; end\n  def update; end\n  def destroy; end\n  end\n")),Object(r.b)("h4",null,"Views"),Object(r.b)("p",null,"When you do not point the controller action to a specific view it will try to render the view with the same name as the action."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"def index; end")," would try to render the ",Object(r.b)("inlineCode",{parentName:"p"},"index.html.erb")," view."),Object(r.b)("h4",null,"Create resourceful routes"),Object(r.b)("p",null,"This will create:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Database migration for the 'students' table."),Object(r.b)("li",{parentName:"ul"},"The Student model with the 'belongs_to' line pointing to 'course'."),Object(r.b)("li",{parentName:"ul"},"A Student controller."),Object(r.b)("li",{parentName:"ul"},"All of the resourceful routes for student.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails g resource [resource name] field:type field:type...\n\n  rails g resource student first_name:string last_name:string course:references\n")),Object(r.b)("h4",null,"Show Routes"),Object(r.b)("p",null,"Show routes from the browser app by going to this path: http://","[url of app][:port]","/rails/info/routes."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails routes\n  # or:\n  rake routes\n")),Object(r.b)("h4",null,"Resourceful Routes in route.rb"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  Rails.application.routes.draw\n    root "students#index"\n    get "students" => "students#index", as: "students"\n    post "students" => "students#create"\n    get "students/new" => "students#new", as: "new_student"\n    get "students/:id/edit" => "students#edit", as: "edit_student"\n    get "students/:id" => "students#show", as: "student"\n    patch "students/:id" => "students#update"\n    put "students/:id" => "students#update"\n    delete "students/:id" => "students#destroy"\n  end\n\n  # This is actually the same thing as the above:\n\n  Rails.application.routes.draw\n    root "students#index"\n    resources :students\n  end\n')),Object(r.b)("h4",null,"One-to-Many Nested Rotues in route.rb"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  get '/lists/:list_id/notes' => 'notes#index', as: 'list_notes'\n  post '/lists/:list_id/notes' => 'notes#create'\n  get 'lists/:list_id/notes/new' => 'notes#new', as: 'new_list_note'\n  get '/lists/:list_id/notes/:id/edit' => 'notes#edit', as: 'edit_list_note'\n  get '/lists/:list_id/notes/:id' => 'notes#show', as: 'list_note'\n  patch 'lists/:list_id/notes/:id' => 'notes#update'\n  patch 'lists/:list_id/notes/:id' => 'notes#update'\n  delete 'lists/:list_id/notes/:id' => 'notes#destroy'\n")),Object(r.b)("h4",null,"List of Resourceful routes"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Verb"),Object(r.b)("th",{parentName:"tr",align:null},"URL"),Object(r.b)("th",{parentName:"tr",align:null},"controller#action"),Object(r.b)("th",{parentName:"tr",align:null},"Task"),Object(r.b)("th",{parentName:"tr",align:null},"SQL","*","*"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"students"),Object(r.b)("td",{parentName:"tr",align:null},"GET"),Object(r.b)("td",{parentName:"tr",align:null},"/students"),Object(r.b)("td",{parentName:"tr",align:null},"student#index"),Object(r.b)("td",{parentName:"tr",align:null},"Show Students"),Object(r.b)("td",{parentName:"tr",align:null},"SELECT ","*")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null}),Object(r.b)("td",{parentName:"tr",align:null},"POST"),Object(r.b)("td",{parentName:"tr",align:null},"/students"),Object(r.b)("td",{parentName:"tr",align:null},"students#create"),Object(r.b)("td",{parentName:"tr",align:null},"Create a new Student"),Object(r.b)("td",{parentName:"tr",align:null},"CREATE")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"new_student"),Object(r.b)("td",{parentName:"tr",align:null},"GET"),Object(r.b)("td",{parentName:"tr",align:null},"/students/new"),Object(r.b)("td",{parentName:"tr",align:null},"students#new"),Object(r.b)("td",{parentName:"tr",align:null},"Show new Student form"),Object(r.b)("td",{parentName:"tr",align:null},"Display a HTML form")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"edit_student"),Object(r.b)("td",{parentName:"tr",align:null},"GET"),Object(r.b)("td",{parentName:"tr",align:null},"/students/:id/edit"),Object(r.b)("td",{parentName:"tr",align:null},"students#edit"),Object(r.b)("td",{parentName:"tr",align:null},"Show edit Student form"),Object(r.b)("td",{parentName:"tr",align:null},"SELECT where id =")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"student"),Object(r.b)("td",{parentName:"tr",align:null},"GET"),Object(r.b)("td",{parentName:"tr",align:null},"/students/:id"),Object(r.b)("td",{parentName:"tr",align:null},"students#show"),Object(r.b)("td",{parentName:"tr",align:null},"Show a Student"),Object(r.b)("td",{parentName:"tr",align:null},"SELECT where id =")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null}),Object(r.b)("td",{parentName:"tr",align:null},"PATCH"),Object(r.b)("td",{parentName:"tr",align:null},"/students/:id"),Object(r.b)("td",{parentName:"tr",align:null},"students#update"),Object(r.b)("td",{parentName:"tr",align:null},"Update Student (partial)"),Object(r.b)("td",{parentName:"tr",align:null},"UPDATE tbl SET (name = 'Josh')")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null}),Object(r.b)("td",{parentName:"tr",align:null},"PUT"),Object(r.b)("td",{parentName:"tr",align:null},"/students/:id"),Object(r.b)("td",{parentName:"tr",align:null},"students#update"),Object(r.b)("td",{parentName:"tr",align:null},"Update Student (complete)"),Object(r.b)("td",{parentName:"tr",align:null},"UPDATE tbl SET (name = 'Josh', day = 'Wed', state = 'AL' ...)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null}),Object(r.b)("td",{parentName:"tr",align:null},"DELETE"),Object(r.b)("td",{parentName:"tr",align:null},"/students/:id"),Object(r.b)("td",{parentName:"tr",align:null},"students#destroy"),Object(r.b)("td",{parentName:"tr",align:null},"Remove a Student"),Object(r.b)("td",{parentName:"tr",align:null},"DELETE")))),Object(r.b)("p",null,"*","*"," There are exceptions to the SQL displayed here. These example serve as the most common implementations in my experience.\nEach of the 'name's listed in the table above is appended with either '","_","url' or '","_","path' in rails.\nIn the rails app, use '","_","path' for your views and '","_","url' for controller redirects."),Object(r.b)("h5",null,"_","url (full path to page)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"i.e. students_url: ",Object(r.b)("a",{parentName:"li",href:"http://www.joshyoung.me/students"},"http://www.joshyoung.me/students")),Object(r.b)("li",{parentName:"ul"},"i.e. student_url(4): ttp://",Object(r.b)("a",{parentName:"li",href:"http://www.joshyoung.me/students/4"},"www.joshyoung.me/students/4"))),Object(r.b)("h5",null,"_","path (relative path to page)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"i.e. students_path: /students"),Object(r.b)("li",{parentName:"ul"},"i.e. student_path(4): /students/4")),Object(r.b)("h4",null,"Naming"),Object(r.b)("p",null,"By convention the name of the model is singular and the name of the table is plural."),Object(r.b)("h4",null,"Create New Table Entry"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  township = Township.new\n  township.city = 'London'\n  township.country = 'England'\n  township.save\n\n  # Or:\n\n  township = Township.new(city: 'London', country: 'England')\n  township.save\n\n  # Or:\n\n  Township.create(city: 'London', country: 'England')\n")),Object(r.b)("h4",null,"Update Table Value"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  township = Township.find(2)\n  township.city = 'London'\n  township.country = 'England'\n  township.save\n\n  # or:\n\n  township.update(city: 'London', country: 'England')\n")),Object(r.b)("h4",null,"Delete Table Value"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  township = Township.find_by(city: 'Jacksonville')\n  township.destroy\n")),Object(r.b)("h4",null,"One-to-Many Relationships"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # One (parent):\n  class Student < ApplicationRecord\n    has_many :movies\n  end\n\n  # Many (has a foreign key to reference parent):\n  class Movie < ApplicationRecord\n    belongs_to :student\n  end\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Setup the cascade to delete movies, then the student it removed:\n  class Student < ApplicationRecord\n    has_many :devices, dependent: :destroy\n  end\n")),Object(r.b)("p",null,"Generate the relationship:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rails g resource Device name:string student:references\n")),Object(r.b)("h5",null,"One (parent):"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"students"),Object(r.b)("th",{parentName:"tr",align:null}),Object(r.b)("th",{parentName:"tr",align:null}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"id"),Object(r.b)("td",{parentName:"tr",align:null},"name"),Object(r.b)("td",{parentName:"tr",align:null},"age")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"Frank"),Object(r.b)("td",{parentName:"tr",align:null},"35")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"Sally"),Object(r.b)("td",{parentName:"tr",align:null},"28")))),Object(r.b)("h5",null,"Many (child):"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"devices"),Object(r.b)("th",{parentName:"tr",align:null}),Object(r.b)("th",{parentName:"tr",align:null}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"id"),Object(r.b)("td",{parentName:"tr",align:null},"name"),Object(r.b)("td",{parentName:"tr",align:null},"student_id")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"iPhone"),Object(r.b)("td",{parentName:"tr",align:null},"2")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"iPad"),Object(r.b)("td",{parentName:"tr",align:null},"2")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"3"),Object(r.b)("td",{parentName:"tr",align:null},"Laptop"),Object(r.b)("td",{parentName:"tr",align:null},"3")))),Object(r.b)("p",null,"In the above example, 'student_id' is a foreign key pointing to the 'id' field in the 'students' table.\nThe foreign key will always be the parent's table name in singular form (student) with an '","_","id' appended to the end. So in this case it is 'student_id' since the parent table is 'students'."),Object(r.b)("p",null,"In the ruby console, ",Object(r.b)("strong",{parentName:"p"},"student.devices")," would return all of the devices that student possesses. On the other hand, ",Object(r.b)("strong",{parentName:"p"},"device.student")," would return the student who is the owner of the device selected."),Object(r.b)("h4",null,"Many-to-Many Relationships"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class Student < ApplicationRecord\n    has_many :devices\n  end\n\n  class Device < ApplicationRecord\n    belongs_to :student\n    belongs_to :colors\n  end\n\n  class Color < ApplicationRecord\n    has_many :devices\n  end\n")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"students"),Object(r.b)("th",{parentName:"tr",align:null}),Object(r.b)("th",{parentName:"tr",align:null}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"id"),Object(r.b)("td",{parentName:"tr",align:null},"name"),Object(r.b)("td",{parentName:"tr",align:null},"age")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"Frank"),Object(r.b)("td",{parentName:"tr",align:null},"35")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"Sally"),Object(r.b)("td",{parentName:"tr",align:null},"28")))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"devices"),Object(r.b)("th",{parentName:"tr",align:null}),Object(r.b)("th",{parentName:"tr",align:null}),Object(r.b)("th",{parentName:"tr",align:null}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"id"),Object(r.b)("td",{parentName:"tr",align:null},"name"),Object(r.b)("td",{parentName:"tr",align:null},"student_id"),Object(r.b)("td",{parentName:"tr",align:null},"color_id")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"iPhone"),Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"1")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"iPad"),Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"1")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"3"),Object(r.b)("td",{parentName:"tr",align:null},"Laptop"),Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"2")))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"colors"),Object(r.b)("th",{parentName:"tr",align:null}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"id"),Object(r.b)("td",{parentName:"tr",align:null},"color")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"Green")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"2"),Object(r.b)("td",{parentName:"tr",align:null},"Blue")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"3"),Object(r.b)("td",{parentName:"tr",align:null},"Silver")))),Object(r.b)("h3",null,Object(r.b)("a",{name:"ruby"}),"Ruby"),Object(r.b)("h4",null,"Write to file from command line:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  f = File.new('log.txt', 'w')\n  f << log_this_variables_value\n  f.close\n")),Object(r.b)("h4",null,"Output just a class' own methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  klass = Klass.new\n\n  puts klass.methods - methods\n")),Object(r.b)("h4",null,"Loads IRB With Active Support"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  !rails c\n")),Object(r.b)("h4",null,"Struct"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # With Struct you can only define\n  # the attributes at object creation\n  Student = Struct.new(:name, :grade)\n  george = Student.new('george', 95)\n\n  # Outputs: 'george'\n  puts george.name\n\n  # Outputs: 95\n  puts george.grade\n")),Object(r.b)("h4",null,"OpenStruct"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  require 'ostruct'\n  george = OpenStruct.new(name: 'george', grade: 95)\n\n  # Outputs: 'george'\n  puts george.name\n\n  # Outputs: 95\n  puts george.grade\n")),Object(r.b)("h4",null,"Open documentation for project's gems"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  gem serve\n")),Object(r.b)("h4",null,"Install to global gemset (when using rvm)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rvm @global do gem install [gem name]\n")),Object(r.b)("h4",null,"Empty Method Returns Nil"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  def find_grade; end\n  grade = find_grade\n\n  # Outputs nil:\n  puts grade\n")),Object(r.b)("h4",null,"Naming"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Class is a Noun:\n  class Cards\n    # Module is an Adjective:\n    include Shuffleable\n  end\n")),Object(r.b)("h4",null,"Ranges"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Inclusive:\n  5..10\n  # Exclusive:\n  5...10\n")),Object(r.b)("h4",null,"Find Methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  cat.private_methods\n  cat.public_methods\n  cat.protected_methods\n  cat.singleton_methods\n\n  Cat.private_instance_methods\n  Cat.protected_instance_methods\n  Cat.public_instance_methods\n")),Object(r.b)("h4",null,"Syntactic Sugar"),Object(r.b)("p",null,"At the end of the day, the operators we know like ",Object(r.b)("inlineCode",{parentName:"p"},"+"),", ",Object(r.b)("inlineCode",{parentName:"p"},"-"),", etc are actually methods in ruby. So these two will do the same thing:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  y = 5 + 6;\n  y = 5.+(6)\n")),Object(r.b)("h4",null,"Methods and Code Blocks"),Object(r.b)("p",null,"By default all methods will accept a code block. However, they will not yield to the block unless the method includes a ",Object(r.b)("inlineCode",{parentName:"p"},"yield")," keyword."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  # These are both valid ways to call a method:\n  my_method\n  my_method { puts "Test" }\n  my_method() { puts "Test" }\n')),Object(r.b)("h4",null,"Accept Multiple Arguments"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  def lots_of(*a)\n  end\n\n  # Outpus: [1, 2, 3, 4]\n  puts lots_of(1, 2, 3, 4)\n")),Object(r.b)("h4",null,"Multiline Comment"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"=begin\n  def a_function\n  puts 'test'\n  end\n=end\n")),Object(r.b)("h4",null,"Ruby Symbol vs Strings"),Object(r.b)("p",null,"Symbols have the same object ID whereas strings do not.\nSymbols are immutable and strings are mutable."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  # Open irb:\n  >> :pathway.object_id\n  => 9854917\n  >>\n  >> :pathway.object_id\n  => 9854917\n  >>\n  >> "pathway".object_id\n  => 97508076985508\n  >>\n  >> "pathway".object_id\n  => 98508075985400\n  >>\n  >> :pathway == "pathway"\n  => false\n')),Object(r.b)("h4",null,"Ruby Class Properties"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class RubyStudent\n    # readable only:\n    attr_reader :name\n\n    # writable only:\n    attr_writer :name\n\n    # readable and writable:\n    attr_accessor :grade\n\n    def initialize\n      @name = 'Josh'\n      @grade = 'a'\n    end\n\n    # Override the attr_accessor method in your class:\n    def grade=(my_grade)\n      @grade = my_grade.upcase\n    end\n    ...\n  end\n\n  rstudent = RubyStudent.new\n\n  # Call the accessor method:\n  puts rstudent.name\n")),Object(r.b)("h4",null,"Static Methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class RubyStudent\n    def self.my_method\n      ...\n    end\n  end\n\n  # Call static method:\n  RubyStudent.my_method\n")),Object(r.b)("h4",null,"Multiple Static Methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class RubyStudent\n    class << self\n      def my_method\n        ...\n      end\n\n      def my_second_method\n        ...\n      end\n    end\n  end\n\n  # Call static method:\n  RubyStudent.my_method\n  RubyStudent.my_second_method\n")),Object(r.b)("h4",null,"Ruby Modules"),Object(r.b)("p",null,"Modules are a typically used to create reusable sections of code in the form of Mixins or they can be used to wrap classes thereby action as a Namespace."),Object(r.b)("p",null,"Modules cannot be instantiated, so any methods have to be defined with self."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  module Learnable\n    ...\n    def self.calculate\n      ...\n    end\n  end\n\n  # Call the Module method:\n  Learnable::calculate\n  # or\n  Learnable.calculate\n")),Object(r.b)("h4",null,"Ruby Class Inheritance"),Object(r.b)("p",null,"Use inheritance when two class have a 'is-a' relationship. For instance: a MathStudent is a type of Student and a Fox is a type of Animal."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class Student\n    ...\n    def print_grade\n      puts 'A'\n    end\n  end\n\n  class MathStudent < Student\n    def print_grade\n      puts 'A+'\n    end\n  end\n\n  student = MathStudent.new\n\n  # Prints 'A+':\n  student.print_grade\n")),Object(r.b)("h4",null,"Ruby Namespace"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  module CollegeStudent\n    class Student\n      def self.outp\n        puts 'output'\n      end\n      def out\n        puts 'new output'\n      end\n    end\n  end\n\n  CollegeStudent::Student.outp\n  student = CollegeStudent::Student.new\n  student.out\n")),Object(r.b)("h4",null,"Ruby Mixins"),Object(r.b)("p",null,"Ruby Mixins are just ruby modules that are included within a class."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # If a module will be included in a class as a mixin, you do not have to define the method with self.\n  # This way you can call the module method with the class instantiation.\n\n  # File 'learnable.rb'\n  module Learnable\n    def calculate(num1, num2)\n      num1 * num2\n    end\n  end\n\n  # File: student.rb\n  require_relative 'learnable'\n  class Student\n    include Learnable\n\n    def add_up(n1, n2)\n      calculate(n1, n2)\n    end\n  end\n\n  student = Student.new\n  puts student.calculate(2, 2)\n")),Object(r.b)("p",null,"When you define a mixin, if you know what class it will be included within, you can use class properties in the Module definition, like below:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  module Learnable\n    def calculate(num1, num2)\n      @first_number = 10\n    end\n  end\n")),Object(r.b)("p",null,"However, doing so could cause problems if you ever include the module within a class that does not define '@first_number'. Therefore it is best to use the class access within the module methods, like so:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  module Learnable\n    def calculate(num1, num2)\n      #Here we have to use 'self' otherwise the module will think it is defining a local variable.\n      self.first_number = 10\n    end\n  end\n")),Object(r.b)("p",null,"Then when this is included in a class, it will work like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  require_relative 'learnable'\n  class Student\n    include Learnable\n\n    attr_accessor :first_number\n\n    def initialize\n      calculate(2, 2)\n    end\n  end\n\n  puts Student.new.first_number\n")),Object(r.b)("h4",null,"Unless vs If"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Prints 'false unless':\n  unless false\n    puts 'false unless'\n  end\n\n  # Prints 'false unless':\n  puts 'false unless' unless false\n\n  # Prints 'false if':\n  if !false\n    puts 'false if'\n  end\n\n  # Prints 'false if':\n  puts 'false if' if !false\n")),Object(r.b)("h4",null,"Memoization"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # If 'x' is false or nil return the value of 'y',\n  # otherwise return the value of 'x':\n  x ||= y\n\n  # The first time through it will call the 'find_the_pizza' method.\n  # For subsequent calls it will return '@pizza'.\n  def pizza_special\n    @pizza ||= PizzaSpecial.find_the_pizza('cheese')\n  end\n")),Object(r.b)("h4",null,"When You Must Use 'self'."),Object(r.b)("h5",null,"For assigning values with the accessor method from within a class:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class Animal\n    attr_accessor :tail\n\n    def change_tail(new_tail)\n      # To get this to work as expected, you would have\n      # to change the line below to use 'self'\n      tail = new_tail\n\n      # Change to this:\n      # self.tail = new_tail\n\n      # If you do not use 'self' as shown above, ruby\n      # thinks you are assigning to a local variable.\n\n      # This works without 'self' because ruby knows that there is no local\n      # variable titled 'tail' therefore it knows to return the value from the\n      # accessor method:\n      def send_tail\n        tail\n      end\n    end\n  end\n\n  the_tail = Animal.new\n  the_tail.tail = 'Brown'\n  the_tail.change_tail('light brown')\n\n  # This would output 'Brown'.\n  puts the_tail.tail\n")),Object(r.b)("h5",null,"For defining 'class methods' (a.k.a. Static Methods):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class Student\n    def self.new_grade(grade)\n      @grade = grade\n    end\n  end\n\n  Student.new_grade('A')\n")),Object(r.b)("h4",null,"Convenient Methods"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  class Test\n  ...\n  end\n\n  # Prints: Test\n  puts Test.inspect\n\n  # Prints: Class\n  puts Test.class\n\n  # Prints: 89023478923\n  puts test.object_id\n")),Object(r.b)("h4",null,"Show Ancestors"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # In a file named 'my_module.rb':\n  module MyMod\n    ...\n  end\n\n  # In another class:\n  require_relative 'my_module'\n  class Test\n    include MyMod\n    ...\n  end\n\n  # Prints: [Test, MyMod, Object, Kernel, BasicObject]\n  puts Test.ancestors\n")),Object(r.b)("h4",null,"Function Return"),Object(r.b)("p",null,"Functions always return a value even if they are empty."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  def empty_function; end\n\n  return_value = empty_function\n\n  # Prints 'nil':\n  puts return_value.inspect\n")),Object(r.b)("h4",null,"Ruby Convert Types"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  a_string = 'a string value'\n\n  # Convert to Symbol:\n  a_string.to_sym\n\n  # Convert to String:\n  123.to_s\n\n  # Convert to Integer:\n  \"123\".to_i\n")),Object(r.b)("h4",null,"Look up Ruby Docs from command line"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"http://ruby-doc.org"},"Online Documentation")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ri\n  # or:\n  ri -i (for interactive mode)\n")),Object(r.b)("h4",null,"Interpolate code"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  variable_value = 'test'\n  puts \"Print out #{variable_value}\"\n")),Object(r.b)("h4",null,"Start IRB Session"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  irb\n")),Object(r.b)("h4",null,"If/Else Statement"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  if a_value == 1\n  puts "Yes"\n  elsif a_value == 2\n  puts "No"\n  else\n  puts "Could not find."\n  end\n')),Object(r.b)("h4",null,"Switch Statement"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  the_value = return_a_string()\n\n  case the_value\n  when "One"\n    puts "It is one!"\n  when "Two"\n    puts "It is two!"\n  else\n    puts "Could not find result."\n  end\n')),Object(r.b)("h4",null,"Objects"),Object(r.b)("p",null,"Ruby objects are always passed by reference"),Object(r.b)("h4",null,"Function"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  def function_name(parameter)\n    ...\n  end\n")),Object(r.b)("h4",null,"Add to Array"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  the_array << "val"\n\n  # Or:\n  the_array.push("val")\n')),Object(r.b)("h4",null,"Object Instantiation"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  new_obj = Person.new\n")),Object(r.b)("h4",null,"Iteration"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  array.each do |elem| ... end\n")),Object(r.b)("h4",null,"Custom Iteration"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  # Example 1:\n  def output\n    yield\n    yield\n  end\n\n  output { puts "This is output twice" }\n\n  # Example 2:\n  def output_num\n    yield(100)\n    yield(200)\n  end\n\n  output_num { |num| puts num }\n')),Object(r.b)("h4",null,"Basic Blocks"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  2.times { puts 'Josh' }\n\n  2.times do\n    puts 'Josh'\n  end\n\n  2.times { |i| puts \"#{i} - Josh\" }\n\n  2.times do |i|\n    puts \"#{i} - Josh\"\n  end\n")),Object(r.b)("h4",null,"Select Block"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Returns just the numbers greater than '3':\n  [1, 2, 3, 4, 5, 6, 7, 8, 9].select { |n| n > 3 }\n")),Object(r.b)("h4",null,"Reject Block"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Rejects the numbers greater than '3':\n  [1, 2, 3, 4, 5, 6, 7, 8, 9].reject { |n| n > 3 }\n")),Object(r.b)("h4",null,"Reduce Block"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Gets the sum with the reduce method:\n  [1, 2, 3, 4, 5, 6, 7, 8, 9].reduce { |total, n| total + n }\n  # or:\n  [1, 2, 3, 4, 5, 6, 7, 8, 9].reduce (:+)\n")),Object(r.b)("h4",null,"Sort Lowest to Highest"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  [11, 21, 73, 14, 95, 56, 97, 48, 19].sort\n")),Object(r.b)("h4",null,"Sort Highest to Lowest"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  [11, 21, 73, 14, 95, 56, 97, 48, 19].sort { |a, b| b <=> a }\n")),Object(r.b)("h4",null,"Returns boolean if it finds the result"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # This should return false.\n  [11, 21, 73, 14, 95, 56, 97, 48, 19].any? { |n| n > 100 }\n")),Object(r.b)("h4",null,"Returns the first match"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # This should return 73.\n  [11, 21, 73, 14, 95, 56, 97, 48, 19].detect { |n| n > 70 }\n")),Object(r.b)("h4",null,"Map the values returned into a new array"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  [11, 21, 73, 14, 95, 19].map { |n| n * 3 }\n")),Object(r.b)("h4",null,"Hash (associative array / dictionary)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  {key => value}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  {:sport => "baseball"} (the key can be anything)\n')),Object(r.b)("p",null,"These are both the same:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  {:sport => "baseball", :time_limit => 60}\n\n  # Or:\n  {sport: "baseball", time_limit: 60}\n')),Object(r.b)("h4",null,"Loop through a hash"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},'  sports = {:sport => "baseball", :time_limit => 60}\n  sports.each { |key, val| puts "#{key} - #{val}" }\n')),Object(r.b)("h3",null,Object(r.b)("a",{name:"sqlite"}),"SQLite"),Object(r.b)("h4",null,"Execute a Single Query"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'  sqlite3 -line mydatabase.sqlite3 "select * from students"\n')),Object(r.b)("h4",null,"Select Databse"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  \\c [database]\n")),Object(r.b)("h4",null,"Connect to DB"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  sqlite3 /path/to/database_file.db\n")),Object(r.b)("h4",null,"Show databases"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  .database\n")),Object(r.b)("h4",null,"Show tables"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  .tables\n")),Object(r.b)("h4",null,"Tables Schema"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  .schema table_name\n")),Object(r.b)("h4",null,"Describe Table"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  pragma table_info(table_name)\n")),Object(r.b)("h4",null,"Select all"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  select * from table_name\n")),Object(r.b)("h4",null,"Exit SqLite Command Prompt:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  .quit\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"security"}),"Security"),Object(r.b)("h4",null,"Ping Sweep"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  for i in `seq 1 255`; do ping -c 1 [IP ADDRESS].$i ; done\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"testing"}),"Testing"),Object(r.b)("h4",null,"Rspec Fail on First Error"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  rspec --fail-fast\n")),Object(r.b)("h4",null,"Rspec with Documentation"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  rspec -f d\n")),Object(r.b)("h4",null,"Test File Setup"),Object(r.b)("p",null,"We have a space between each part below."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ruby"},"  # Setup:\n  user = create(:user)\n\n  # Exercise:\n  Student.addToClass(user)\n\n  # Verify:\n  expect(Student.users).to eq([user])\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"ssh"}),"SSH"),Object(r.b)("h4",null,"Remote Port Forwarding"),Object(r.b)("p",null,"Here ",Object(r.b)("strong",{parentName:"p"},"9100")," is the remote port and ",Object(r.b)("strong",{parentName:"p"},"22")," is the remote port."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ssh -R 9100:127.0.0.1:22 username@192.168.6.7\n")),Object(r.b)("h4",null,"Generate a SSH and transfer it to a server"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ssh-keygen -t ed25519 -C “key_name”\n  ssh-copy-id -i ~/.ssh/key_name.pub 192.168.1.100\n")),Object(r.b)("h4",null,"Connect with a specific key"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ssh -i ~/.ssh/key_name user@192.168.1.100\n")),Object(r.b)("h4",null,"Local Port Forward"),Object(r.b)("p",null,"In this case, ",Object(r.b)("strong",{parentName:"p"},"9100")," would be our local port and ",Object(r.b)("strong",{parentName:"p"},"80")," would be the remote."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ssh -L 9100:www.remotesite.com:80 username@host\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"svg"}),"SVG"),Object(r.b)("h4",null,"SVG viewBox"),Object(r.b)("p",null,"The viewBox has values of x, y, width, and height. The shapes within this box will be set in relation to the size of the viewBox. The viewBox location within the SVG tag can be offset with the first two numbers (x, y)."),Object(r.b)("p",null,"In the CodePen below below, you can see that the first and last example are consuming 100% of the width of the viewBox. When the screen is expanded or contracted, the elements within expand or contract accordingly, but always consume 100% of the size of the viewBox because the elements inside are sized to contain 100% of the viewBox width."),Object(r.b)("p",null,"The middle example below internal shapes that total to less than the full width of the viewBox. The viewBox is also shifted from a starting point of 0,0 to demonstrate that the view box can be positioned anywhere within the contining SVG element."),Object(r.b)("p",null,"To adjust the size of the SVG, you can set the outer containing ",Object(r.b)("inlineCode",{parentName:"p"},"SVG")," tag to be a certain percentage of the width of the browser window or even a fixed width. Within this the inner viewBox can be positioned within it."),Object(r.b)("p",{"data-height":"265","data-theme-id":"0","data-slug-hash":"xzgvKX","data-default-tab":"html,result","data-user":"joshayoung","data-embed-version":"2","data-pen-title":"SVG viewBox",className:"codepen"},"See the Pen ",Object(r.b)("a",{href:"https://codepen.io/joshayoung/pen/xzgvKX/"},"SVG viewBox")," by Josh Young (",Object(r.b)("a",{href:"https://codepen.io/joshayoung"},"@joshayoung"),") on ",Object(r.b)("a",{href:"https://codepen.io"},"CodePen"),"."),Object(r.b)("h4",null,"SVG Links"),Object(r.b)("p",{"data-height":"265","data-theme-id":"0","data-slug-hash":"xzgodE","data-default-tab":"html,result","data-user":"joshayoung","data-embed-version":"2","data-pen-title":"SVG Symbol",className:"codepen"},"See the Pen ",Object(r.b)("a",{href:"https://codepen.io/joshayoung/pen/xzgodE/"},"SVG Symbol")," by Josh Young (",Object(r.b)("a",{href:"https://codepen.io/joshayoung"},"@joshayoung"),") on ",Object(r.b)("a",{href:"https://codepen.io"},"CodePen"),"."),Object(r.b)("h4",null,"SVG Elements"),Object(r.b)("p",{"data-height":"265","data-theme-id":"0","data-slug-hash":"wXgNvg","data-default-tab":"html,result","data-user":"joshayoung","data-embed-version":"2","data-pen-title":"SVG Stuff",className:"codepen"},"See the Pen ",Object(r.b)("a",{href:"https://codepen.io/joshayoung/pen/wXgNvg/"},"SVG Stuff")," by Josh Young (",Object(r.b)("a",{href:"https://codepen.io/joshayoung"},"@joshayoung"),") on ",Object(r.b)("a",{href:"https://codepen.io"},"CodePen"),"."),Object(r.b)("h4",null,"Set SVG to Scale with Browser Width"),Object(r.b)("p",null,"By default an SVG element will take up the full width of the browser unless it has a defined width. To circumvent this, you can give it a definined with such as 300px or a percentage. Below is an example of a way to set the SVG element to be half of the browser width."),Object(r.b)("p",null,"If the SVG tag is set to scale with the browser width, the SVG shapes within the internal viewBox will scale accordingly."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"svg {\n  height: auto;\n  // This could be any percentage:\n  width: 50%;\n}\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"rider"}),"Rider"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"Alt + Insert")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Generation Menu."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"CMD/CTRL + n")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Add Controller"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"CMD + OPTION + L")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Format Code")))),Object(r.b)("h3",null,Object(r.b)("a",{name:"rubymine"}),"RubyMine"),Object(r.b)(O,{mdxType:"Rubymine"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"intellij"}),"IntelliJ"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Context menu to add class components",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"CMD + N"))))),Object(r.b)("h3",null,Object(r.b)("a",{name:"scp"}),"SCP"),Object(r.b)("h4",null,"Local to Remote"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  scp file.txt username@host:/to/myremote/directory\n")),Object(r.b)("h4",null,"Remote to Local"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  scp username@host:file.txt /to/my/local/directory\n")),Object(r.b)("h4",null,"Backup Local Folder to Remote"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  scp -r local_folder/ user@host:/path/to/folder\n")),Object(r.b)("h4",null,"Backup Folder Remote to Local"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  scp -r user@host:/path/to/folder/* /to/my/local/directory/\n")),Object(r.b)("h4",null,"Backup Folder Remote to Local, with Port"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  scp -r -P 8000 user@host:/path/to/folder/* /to/my/local/directory/\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"security"}),"Security"),Object(r.b)("h4",null,"Nmap Ping Scan (detect hosts)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  nmap -sP 192.168.1.0/24\n")),Object(r.b)("h4",null,"Bypass a Self-Signed SSL Warning in Chrome"),Object(r.b)("p",null,"Once you get the warning in the webpage, to continue to the site anyway, type: ",Object(r.b)("inlineCode",{parentName:"p"},"thisisunsafe"),"."),Object(r.b)("h4",null,"Bash Ping Sweep"),Object(r.b)("h4",null,"Usage: ",Object(r.b)("strong",{parentName:"h4"},"./sweep.sh 192.168.1")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  #!/bin/bash\n  ip=$1\n  for i in `seq 0 1 255`; do\n    ping -c 3 -t 5 $ip.$i > /dev/null 2>&1 && echo $ip.$i is up;\n  done\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"php"}),"PHP"),Object(r.b)("h4",null,"GET/POST Assignment"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"  $var = isset($_GET['var']) ? $_GET['var'] : '';\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"tmux"}),"TMUX"),Object(r.b)(m,{mdxType:"TMUX"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"vim"}),"VIM"),Object(r.b)(h,{mdxType:"VIM"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"vs_code"}),"VS Code"),Object(r.b)(g,{mdxType:"VSCode"}),Object(r.b)("h3",null,Object(r.b)("a",{name:"windows"}),"Windows"),Object(r.b)("h4",null,"Switch to C Drive"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  cd /d C:\n")),Object(r.b)("h4",null,"Flush DNS"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ipconfig /flushdns\n")),Object(r.b)("h4",null,"All Network Info"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  ipconfig /all\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"xamarin"}),"Xamarin"),Object(r.b)("h4",null,"Margin:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"left/right, top/bottom"),Object(r.b)("li",{parentName:"ul"},"left, top, right, bottom")),Object(r.b)("h3",null,Object(r.b)("a",{name:"yarn"}),"YARN"),Object(r.b)("h4",null,"Update all packages in ",Object(r.b)("inlineCode",{parentName:"h4"},"packge.json")," to the lates version with:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  yarn upgrade\n")),Object(r.b)("p",null,"Upgrade to specific versions with:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  yarn upgrade package@version\n")),Object(r.b)("p",null,"Reference: ",Object(r.b)("a",{parentName:"p",href:"https://classic.yarnpkg.com/en/docs/cli/upgrade"},"yarn upgrade")),Object(r.b)("h4",null,"Package Version (exclude dependencies)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  yarn list --depth 0 | grep [package name]\n")),Object(r.b)("h4",null,"Show why a package was installed:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  yarn why\n")),Object(r.b)("h3",null,Object(r.b)("a",{name:"zfs"}),"ZFS"),Object(r.b)("h4",null,"ZFS Pool Status"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"  zpool status -v\n\n  zpool history\n\n  # List Datasets:\n  zfs list\n\n  # Display all information about all datasets:\n  zfs get all\n\n  # Mount filesystem:\n  zfs mount /mount_location\n")))}k.isMDXComponent=!0},"eBQ+":function(e,t,n){"use strict";var l=n("qKvR");n("q1tI");t.a=function(e){var t=e.children;return Object(l.d)("ul",{css:Object(l.c)("list-style-type:none;margin-left:0;li{display:inline-block;}a{display:block;padding:2px 10px;margin:2px;background:","#3385ff",";color:#fff;border-radius:4px;&:hover{background:rgba(204,204,204,0.4);color:#000;}}")},t)}},zLVn:function(e,t,n){"use strict";function l(e,t){if(null==e)return{};var n,l,a={},b=Object.keys(e);for(l=0;l<b.length;l++)n=b[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,"a",(function(){return l}))}}]);
//# sourceMappingURL=component---src-pages-snippets-md-6e6fc3057dceeaa740a2.js.map